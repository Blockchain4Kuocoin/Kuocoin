{"version":3,"sources":["Reducer/loadingReducer.js","Lib/asyncUtil.js","Lib/utils.js","Api/api.js","Reducer/coinReducer.js","Container/withSize.js","styles/theme.js","Components/Global/Header.js","Container/withSelectedCoinName.js","Container/withSelectedCoinPrice.js","Container/withThemeData.js","Components/Main/CoinInfoHeader.js","Container/withSelectedOption.js","Components/Main/ChartDataConsole.js","Components/Global/Loading.js","Container/withOHLCData.js","Container/withLoadingData.js","Components/Main/MainChart.js","Components/Main/OrderbookItem.js","Container/withOrderbookData.js","Components/Main/Orderbook.js","Components/Main/OrderInfoTradeList.js","Components/Main/OrderInfoAskBid.js","Components/Main/OrderInfo.js","Components/Main/TradeListItem.js","Container/withTradeListData.js","Components/Main/TradeList.js","Components/Main/CoinListItem.js","Container/withMarketNames.js","Container/withLatestCoinData.js","Components/Main/CoinList.js","Components/Global/Footer.js","Pages/Main.js","Components/Home/HomeBackimg.js","Pages/Home.js","Components/Mypage/Mypage.js","Pages/Mypage.js","Router/MainRouter.js","App.js","serviceWorker.js","Reducer/index.js","styles/GlobalStyle.js","index.js"],"names":["startLoading","payload","type","finishLoading","initialState","createRequestSaga","api","dataMaker","SUCCESS","ERROR","action","put","call","res","select","state","data","createChangeOptionSaga","createConnectSocketThunk","connectType","dispatch","getState","client","W3CWebSocket","binaryType","onopen","send","JSON","stringify","ticket","codes","onmessage","evt","enc","encoding","TextDecoder","arr","Uint8Array","parse","decode","onerror","e","createSocket","connectSocekt","socket","buffer","eventChannel","emit","END","close","buffers","none","reducerUtils","key","error","requestActions","requestInitActions","candleDay","changeOptionActions","dateFormat","d3","timestampToDatetime","timeType","timeCount","timestamp","moment","minute","Math","floor","second","format","hour","candleDataUtils","candles","selectedTimeType","Coin","selectedTimeCount","forEach","candle","market","push","date","datetime","open","opening_price","high","high_price","low","low_price","trade_price","volume","acc_trade_volume","tradePrice","acc_trade_price","acc_trade_price_24h","acc_trade_volume_24h","signed_change_rate","signed_change_price","highest_52_week_price","highest_52_week_date","lowest_52_week_price","lowest_52_week_date","candleStateDatas","coinMarket","code","targetCandles","lastCandle","slice","highestPrice24Hour","lowestPrice24Hour","needUpdate","find","dateChanged","newData","trade_volume","updatedCandles","pop","dateKst","trade_date_kst","timeKst","trade_time_kst","candleStateData","newCandles","map","candle_acc_trade_volume","candle_acc_trade_price","reduce","acc","stateCandle","names","name","split","korean","korean_name","english","english_name","orderbookUtils","orderbooks","_","orderbook","orderbookData","tradeListUtils","tradeLists","tradeListData","tradeList","sequential_id","length","coinApi","axios","get","coins","coin","then","sort","a","b","startInittSaga","startChangeMarketAndDataSaga","startAddMoreCandleDataSaga","changeTimeTypeAndDataSaga","changePriceAndTotalPriceSaga","changeAmountAndTotalPriceSaga","changeTotalPriceAndAmountSaga","coinSaga","SEARCH_COIN","getMarketNameSaga","getInitCandleSaga","getOneCoinCandlesSaga","getAdditionalCoinCandlesSaga","connectCandleSocketSaga","expanding","clientChannel","flush","datas","sortedObj","sortedData","Object","keys","delay","createConnectSocketSaga","getInitOrderbookSaga","connectOrderbookSocketThunk","getOneCoinTradeListsSaga","connectTradeListSocketThunk","changeSelectedMarketSaga","changeSelectedTimeTypeSaga","changeSelectedTimeCountSaga","changeAskBidOrder","askBidOption","changeAskBidOrderSaga","changeOrderPriceSaga","changeOrderAmountSaga","changeOrderTotalPriceSaga","searchCoinSaga","marketNames","selectedMarket","changingMarketName","selectedCoinCandles","Loading","utc","newTimeType","newTimeCount","changePriceAndTotalPrice","price","orderAmount","ceil","orderPrice","toFixed","takeEvery","selectedAskBidOrder","orderTotalPrice","searchCoin","tradePrice24Hour","volume24Hour","changeRate24Hour","total_bid_size","total_ask_size","orderbook_units","withSize","OriginalComponent","props","useState","window","innerWidth","widthSize","setWidthSize","innerHeight","heightSize","setHeightSize","handleSize","useCallback","useEffect","addEventListener","throttle","removeEventListener","viewSize","theme","test","deepBlue","skyBlue1","skyBlue2","lightPink1","lightPink2","strongRed","strongBlue","priceUp","priceDown","priceUpTrans","priceDownTrans","middleGray","lightGray","lightGray1","lightGray2","mobileS","mobileM","tablet","desktop","Header","Navbar","style","backgroundColor","expand","Container","Brand","href","src","width","height","className","Nav","Link","withSelectedCoinName","useSelector","coinNameKor","coinNameEng","splitedName","coinSymbol","coinNameAndMarketEng","withSelectedCoinPrice","selectedCoinData","highestPrice52Week","highestDate52Week","lowestPrice52Week","lowestDate52Week","round","changePrice24Hour","selecteCoinCadnles","lastCandleIndex","beforeDayPrice","withThemeData","useContext","ThemeContext","St","CoinInfoContainer","styled","section","HiddenH3","h3","CoinInfoMain","div","CoinLogo","i","CoinNameContainer","CoinName","strong","CoinMarketName","span","PriceInfo","Price","priceColor","PriceUnit","ChangeContainer","ChangeRate","ChangePrice","TradeInfoContainer","dl","mobileMNone","InfoContainer","tabletNone","TradeInfo","minWidth","borderColor","TradeDT","dt","TradeDD","dd","fontColor","fontWeight","React","memo","title","toLocaleString","withSelectedOption","searchCoinInput","TimeBtnContainer","TimeBtn","button","isSelected","useDispatch","changeChartTime","onClick","isCenter","css","center","color","withOHLCData","selectedCandles","withLoadingData","isCandleLoading","isOrderbookLoading","isTradeListLoading","isInitCandleLoading","isMarketNamesLoading","barChartExtents","candleChartExtents","yEdgeIndicator","volumeSeries","ChartContainer","margin","left","right","top","bottom","minHeight","withDeviceRatio","initialData","ratio","dateTimeFormat","timeDisplayFormat","timeFormat","pricesDisplayFormat","openCloseColor","xScaleProvider","discontinuousTimeScaleProviderBuilder","inputDateAccessor","d","ema12","ema","id","options","windowSize","merge","c","accessor","ema26","elder","elderRay","xScale","xAccessor","displayXAccessor","max","min","xExtents","gridHeight","barChartHeight","chartHeight","ChartCanvas","seriesName","disableInteraction","zoomAnchor","mouseBasedZoomAnchor","onLoadBefore","Chart","origin","h","yExtents","BarSeries","fillStyle","yAccessor","XAxis","showGridLines","showTickLabel","YAxis","tickFormat","CandlestickSeries","fill","wickStroke","LineSeries","strokeStyle","stroke","CurrentCoordinate","MouseCoordinateY","rectWidth","displayFormat","EdgeIndicator","itemType","lineStroke","MovingAverageTooltip","ZoomButtons","OHLCTooltip","padding","gridLinesStrokeStyle","ticks","MouseCoordinateX","ElderRaySeries","SingleValueTooltip","yLabel","yDisplayFormat","bullPower","bearPower","CrossHairCursor","snapX","isEqual","OrderLi","li","Btn","OrderAmount","OrderAmountSize","witdhSize","bgColor","OrderPriceContainer","outline","OrderPrice","OrderPrcieRatio","size","maxOrderSize","index","scrollRef","useRef","parentNode","current","parentAbsoluteTop","pageYOffset","offsetTop","relativeTop","scrollTop","ref","document","activeElement","blur","amountAlign","withOrderbookData","totalData","bidOrderbookData","askOrderbookData","totalBidSize","totalAskSize","bidSize","bid_size","askSize","ask_size","bidPrice","bid_price","askPrice","ask_price","book1","book2","OrderUl","ul","lastTradePrice","OrderTypeContainer","OrderType","borderBottom","OrderInfoContainer","OrderInfoDetailContainer","OrderInfoDetailTitle","OrderInfoInputContainer","OrderInfoInput","input","Button","marginRight","fontSize","PossibleAmount","Unit","OrderBtnContainer","changePrice","parseInt","target","value","replace","changeAmount","changeTotalPrice","onChange","placeholder","OrderTypeLi","OrderTypeBtn","TradeListLi","Datetime","Date","Time","TradePrice","TradeAmount","TradeKRW","time","tradeAmount","askBid","withTradeListData","selectedTradeListData","article","TradeListUL","scrollColor","TradeListTitle","TitleListItem","textAlign","mobileSNone","Decimal","change_price","ask_bid","CoinLi","borderBottomColor","CoinBtn","coinNameEn","CoinNameEn","isTraded","ChangRateContainer","marketName","coinName","enCoinName","history","useHistory","nowTimestamp","changeMarket","startChangeMarketAndData","withMarketNames","marketNamesArr","coinListDatas","coinSearchInputData","filter","toLowerCase","includes","Hangul","str","cho","cur","charCodeAt","charAt","choHangul","coin1","coin2","sortedMarketNames","withLatestCoinData","latestCoinData","CoinListContainer","isRootURL","CoinSearchContainer","CoinSearchInput","CoinSearchBtn","CoinSortContainer","CoinSortList","CoinUl","searchName","Footer","footer","MainLink","logo","Description","p","DescSpan","ContactContainer","address","LinkTitle","LinkTag","LinkSpan","marginLeft","icon","faGithub","faEnvelope","MainContentContainer","ChartAndTradeContainer","HiddenH2","h2","MainChartContainer","TradeOrderContainer","match","path","HomeBackimg","Profile","psw","adr","setState","check","setCheck","inputs","setInputs","handler","useLayoutEffect","fetch","method","headers","json","console","log","val","kuoname","kuopwd","kuoadr","body","MainRouter","exact","component","Main","Home","Mypage","App","Boolean","location","hostname","rootSaga","rootReducer","combineReducers","all","GlobalStyle","createGlobalStyle","normalize","reset","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","run","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6195908a.chunk.js","sourcesContent":["const START_LOADING = \"loading/START_LOADING\";\r\nconst FINISH_LOADING = \"loading/FINISH_LOADING\";\r\n\r\nconst startLoading = (payload) => ({ type: START_LOADING, payload });\r\nconst finishLoading = (payload) => ({ type: FINISH_LOADING, payload });\r\n\r\nconst initialState = {\r\n  \"coin/GET_ONE_COIN_CANDLES\": true,\r\n  \"coin/GET_INIT_ORDERBOOKS\": true,\r\n  \"coin/GET_ONE_COIN_TRADELISTS\": true,\r\n  \"coin/GET_INIT_CANDLES\": true,\r\n  \"coin/GET_MARKET_NAMES\": true,\r\n  \"coin/GET_ADDITIONAL_COIN_CANDLES\": false,\r\n};\r\n\r\nconst loadingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case START_LOADING:\r\n      return {\r\n        ...state,\r\n        [action.payload]: true,\r\n      };\r\n    case FINISH_LOADING:\r\n      return {\r\n        ...state,\r\n        [action.payload]: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { startLoading, finishLoading, loadingReducer };\r\n","import { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { call, put, select, flush, delay } from \"redux-saga/effects\";\r\nimport { startLoading, finishLoading } from \"../Reducer/loadingReducer\";\r\nimport { throttle } from \"lodash\";\r\nimport { buffers, eventChannel, END } from \"redux-saga\";\r\nimport encoding from \"text-encoding\";\r\n\r\n// 캔들용 사가\r\nconst createRequestSaga = (type, api, dataMaker) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const ERROR = `${type}_ERROR`;\r\n\r\n  return function* (action = {}) {\r\n    yield put(startLoading(type));\r\n    try {\r\n      const res = yield call(api, action.payload);\r\n      const state = yield select();\r\n\r\n      yield put({ type: SUCCESS, payload: dataMaker(res.data, state) });\r\n      yield put(finishLoading(type));\r\n    } catch (e) {\r\n      yield put({ type: ERROR, payload: e });\r\n      yield put(finishLoading(type));\r\n      throw e;\r\n    }\r\n  };\r\n};\r\n\r\n// 선택 옵션 변경용 사가\r\nconst createChangeOptionSaga = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n\r\n  return function* (action = {}) {\r\n    yield put({ type: SUCCESS, payload: action.payload });\r\n  };\r\n};\r\n\r\n// 웹소켓 연결용 Thunk\r\nconst createConnectSocketThunk = (type, connectType, dataMaker) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const ERROR = `${type}_ERROR`;\r\n\r\n  return (action = {}) => (dispatch, getState) => {\r\n    const client = new W3CWebSocket(\"wss://api.upbit.com/websocket/v1\");\r\n    client.binaryType = \"arraybuffer\";\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify([\r\n          { ticket: \"downbit-clone\" },\r\n          { type: connectType, codes: action.payload },\r\n        ])\r\n      );\r\n    };\r\n\r\n    client.onmessage = (evt) => {\r\n      const enc = new encoding.TextDecoder(\"utf-8\");\r\n      const arr = new Uint8Array(evt.data);\r\n      const data = JSON.parse(enc.decode(arr));\r\n      const state = getState();\r\n\r\n      dispatch({ type: SUCCESS, payload: dataMaker(data, state) });\r\n    };\r\n\r\n    client.onerror = (e) => {\r\n      dispatch({ type: ERROR, payload: e });\r\n    };\r\n  };\r\n};\r\n\r\n// 웹소켓 연결용 Thunk\r\nconst createConnectSocketThrottleThunk = (type, connectType, dataMaker) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const ERROR = `${type}_ERROR`;\r\n  const throttleDispatch = throttle((dispatch, state, data) => {\r\n    dispatch({ type: SUCCESS, payload: dataMaker(data, state) });\r\n  }, 500);\r\n\r\n  return (action = {}) => (dispatch, getState) => {\r\n    const client = new W3CWebSocket(\"wss://api.upbit.com/websocket/v1\");\r\n    client.binaryType = \"arraybuffer\";\r\n\r\n    client.onopen = () => {\r\n      client.send(\r\n        JSON.stringify([\r\n          { ticket: \"downbit-clone\" },\r\n          { type: connectType, codes: action.payload },\r\n        ])\r\n      );\r\n    };\r\n\r\n    client.onmessage = (evt) => {\r\n      const enc = new encoding.TextDecoder(\"utf-8\");\r\n      const arr = new Uint8Array(evt.data);\r\n      const data = JSON.parse(enc.decode(arr));\r\n      const state = getState();\r\n\r\n      // dispatch({ type: SUCCESS, payload: dataMaker(data, state) });\r\n      throttleDispatch(dispatch, state, data);\r\n    };\r\n\r\n    client.onerror = (e) => {\r\n      dispatch({ type: ERROR, payload: e });\r\n    };\r\n  };\r\n};\r\n\r\n// 소켓 만들기\r\nconst createSocket = () => {\r\n  const client = new W3CWebSocket(\"wss://api.upbit.com/websocket/v1\");\r\n  client.binaryType = \"arraybuffer\";\r\n\r\n  return client;\r\n};\r\n\r\n// 소켓 연결용\r\nconst connectSocekt = (socket, connectType, action, buffer) => {\r\n  return eventChannel((emit) => {\r\n    socket.onopen = () => {\r\n      socket.send(\r\n        JSON.stringify([\r\n          { ticket: \"downbit-clone\" },\r\n          { type: connectType, codes: action.payload },\r\n        ])\r\n      );\r\n    };\r\n\r\n    socket.onmessage = (evt) => {\r\n      const enc = new encoding.TextDecoder(\"utf-8\");\r\n      // const arr = new Uint8Array(evt.data);\r\n      const data = JSON.parse(enc.decode(evt.data));\r\n\r\n      emit(data);\r\n    };\r\n\r\n    socket.onerror = (evt) => {\r\n      emit(evt);\r\n      emit(END);\r\n    };\r\n\r\n    const unsubscribe = () => {\r\n      socket.close();\r\n    };\r\n\r\n    return unsubscribe;\r\n  }, buffer || buffers.none());\r\n};\r\n\r\n// 웹소켓 연결용 사가\r\nconst createConnectSocketSaga = (type, connectType, dataMaker) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const ERROR = `${type}_ERROR`;\r\n\r\n  return function* (action = {}) {\r\n    const client = yield call(createSocket);\r\n    const clientChannel = yield call(\r\n      connectSocekt,\r\n      client,\r\n      connectType,\r\n      action,\r\n      buffers.expanding(500)\r\n    );\r\n\r\n    try {\r\n      while (true) {\r\n        const datas = yield flush(clientChannel); // 버퍼 데이터 가져오기\r\n        const state = yield select();\r\n\r\n        if (datas.length) {\r\n          const sortedObj = {};\r\n          datas.forEach((data) => {\r\n            if (sortedObj[data.code]) {\r\n              // 버퍼에 있는 데이터중 시간이 가장 최근인 데이터만 남김\r\n              sortedObj[data.code] =\r\n                sortedObj[data.code].timestamp > data.timestamp\r\n                  ? sortedObj[data.code]\r\n                  : data;\r\n            } else {\r\n              sortedObj[data.code] = data; // 새로운 데이터면 그냥 넣음\r\n            }\r\n          });\r\n\r\n          const sortedData = Object.keys(sortedObj).map(\r\n            (data) => sortedObj[data]\r\n          );\r\n\r\n          yield put({ type: SUCCESS, payload: dataMaker(sortedData, state) });\r\n        }\r\n        yield delay(500); // 500ms 동안 대기\r\n      }\r\n    } catch (e) {\r\n      yield put({ type: ERROR, payload: e });\r\n    } finally {\r\n      clientChannel.close(); // emit(END) 접근시 소켓 닫기\r\n    }\r\n  };\r\n};\r\n\r\nconst reducerUtils = {\r\n  success: (state, payload, key) => {\r\n    return {\r\n      ...state,\r\n      [key]: {\r\n        data: payload,\r\n        error: false,\r\n      },\r\n    };\r\n  },\r\n  error: (state, error, key) => ({\r\n    ...state,\r\n    [key]: {\r\n      ...state[key],\r\n      error: error,\r\n    },\r\n  }),\r\n};\r\n\r\nconst requestActions = (type, key) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n  return (state, action) => {\r\n    switch (action.type) {\r\n      case SUCCESS:\r\n        return reducerUtils.success(state, action.payload, key);\r\n      case ERROR:\r\n        return reducerUtils.error(state, action.payload, key);\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n\r\nconst requestInitActions = (type, key) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n  return (state, action) => {\r\n    switch (action.type) {\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          candleDay: {\r\n            data: action.payload,\r\n            error: false,\r\n          },\r\n          [key]: {\r\n            data: action.payload,\r\n            error: false,\r\n          },\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          candleDay: {\r\n            ...state.candleDay,\r\n            error: action.payload,\r\n          },\r\n          [key]: {\r\n            ...state[key],\r\n            error: action.payload,\r\n          },\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n\r\nconst changeOptionActions = (type, key) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  return (state, action) => {\r\n    switch (action.type) {\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n\r\nexport {\r\n  createRequestSaga,\r\n  createConnectSocketThunk,\r\n  createConnectSocketThrottleThunk,\r\n  createConnectSocketSaga,\r\n  createChangeOptionSaga,\r\n  requestActions,\r\n  requestInitActions,\r\n  changeOptionActions,\r\n};\r\n","import moment from \"moment-timezone\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst dateFormat = d3.timeParse(\"%Y-%m-%d %H:%M\");\r\n\r\nconst timestampToDatetime = (timeType, timeCount, timestamp) => {\r\n  switch (timeType) {\r\n    case \"minute\":\r\n    case \"minutes\":\r\n      return (\r\n        moment(timestamp)\r\n          .minute(\r\n            Math.floor(moment(timestamp).minute() / timeCount) * timeCount\r\n          )\r\n          .second(0)\r\n          // .tz(\"Asia/Seoul\")\r\n          .format(\"YYYY-MM-DD HH:mm\")\r\n      );\r\n    case \"hour\":\r\n    case \"hours\":\r\n      return (\r\n        moment(timestamp)\r\n          .hour(Math.floor(moment(timestamp).hour() / timeCount) * timeCount)\r\n          .minute(0)\r\n          .second(0)\r\n          // .tz(\"Asia/Seoul\")\r\n          .format(\"YYYY-MM-DD HH:mm\")\r\n      );\r\n    case \"day\":\r\n    case \"days\":\r\n      return moment(timestamp)\r\n        .hour(9)\r\n        .minute(0)\r\n        .second(0)\r\n        .format(\"YYYY-MM-DD HH:mm\");\r\n    case \"week\":\r\n    case \"weeks\":\r\n      return moment(timestamp)\r\n        .hour(0)\r\n        .minute(0)\r\n        .second(0)\r\n        .format(\"YYYY-MM-DD HH:mm\");\r\n    default:\r\n      return undefined;\r\n  }\r\n};\r\n\r\nconst candleDataUtils = {\r\n  init: (candles, state) => {\r\n    const selectedTimeType = state.Coin.selectedTimeType;\r\n    const selectedTimeCount = state.Coin.selectedTimeCount;\r\n\r\n    const data = {};\r\n    candles.forEach((candle) => {\r\n      data[candle.market] = {};\r\n      data[candle.market][\"candles\"] = [];\r\n      data[candle.market][\"candles\"].push({\r\n        date: dateFormat(\r\n          timestampToDatetime(\r\n            selectedTimeType,\r\n            selectedTimeCount,\r\n            candle.timestamp\r\n          )\r\n        ),\r\n        datetime: timestampToDatetime(\r\n          selectedTimeType,\r\n          selectedTimeCount,\r\n          candle.timestamp\r\n        ),\r\n        timestamp: candle.timestamp,\r\n        open: candle.opening_price,\r\n        high: candle.high_price,\r\n        low: candle.low_price,\r\n        close: candle.trade_price,\r\n        volume: candle.acc_trade_volume,\r\n        tradePrice: candle.acc_trade_price,\r\n      });\r\n      data[candle.market][\"tradePrice24Hour\"] = candle.acc_trade_price_24h;\r\n      data[candle.market][\"volume24Hour\"] = candle.acc_trade_volume_24h;\r\n      data[candle.market][\"changeRate24Hour\"] = candle.signed_change_rate;\r\n      data[candle.market][\"changePrice24Hour\"] = candle.signed_change_price;\r\n      data[candle.market][\"highestPrice24Hour\"] = candle.high_price;\r\n      data[candle.market][\"lowestPrice24Hour\"] = candle.low_price;\r\n      data[candle.market][\"highestPrice52Week\"] = candle.highest_52_week_price;\r\n      data[candle.market][\"highestDate52Week\"] = candle.highest_52_week_date;\r\n      data[candle.market][\"lowestPrice52Week\"] = candle.lowest_52_week_price;\r\n      data[candle.market][\"lowestDate52Week\"] = candle.lowest_52_week_date;\r\n    });\r\n\r\n    return data;\r\n  },\r\n\r\n  update: (candle, state) => {\r\n    const candleStateDatas = state.Coin.candle.data;\r\n    const selectedTimeType = state.Coin.selectedTimeType;\r\n    const selectedTimeCount = state.Coin.selectedTimeCount;\r\n\r\n    const coinMarket = candle.code;\r\n\r\n    const targetCandles = candleStateDatas[coinMarket].candles;\r\n    const lastCandle = targetCandles.slice(-1)[0];\r\n\r\n    const date = dateFormat(\r\n      timestampToDatetime(selectedTimeType, selectedTimeCount, candle.timestamp)\r\n    );\r\n    const datetime = timestampToDatetime(\r\n      selectedTimeType,\r\n      selectedTimeCount,\r\n      candle.timestamp\r\n    );\r\n    const open = lastCandle.open;\r\n    const high =\r\n      candle.trade_price > lastCandle.high\r\n        ? candle.trade_price\r\n        : lastCandle.high;\r\n    const low =\r\n      candle.trade_price < lastCandle.low ? candle.trade_price : lastCandle.low;\r\n    const close = candle.trade_price;\r\n\r\n    const highestPrice24Hour = candleStateDatas[coinMarket].highestPrice24Hour;\r\n    const lowestPrice24Hour = candleStateDatas[coinMarket].lowestPrice24Hour;\r\n\r\n    const needUpdate = targetCandles.find(\r\n      (candle) => candle.datetime === datetime\r\n    );\r\n    const dateChanged =\r\n      d3.timeParse(\"YYYY-MM-DD\")(lastCandle.date) !==\r\n      d3.timeParse(\"YYYY-MM-DD\")(datetime);\r\n\r\n    const newData = { ...candleStateDatas }; // 원본 데이터 보장\r\n    if (needUpdate) {\r\n      const volume = needUpdate.volume + candle.trade_volume;\r\n      const tradePrice = needUpdate.tradePrice + candle.trade_price;\r\n      const updatedCandles = [...targetCandles];\r\n      updatedCandles.pop();\r\n      updatedCandles.push({\r\n        date,\r\n        datetime,\r\n        timestamp: candle.timestamp,\r\n        open,\r\n        high,\r\n        low,\r\n        close,\r\n        volume,\r\n        tradePrice,\r\n      });\r\n\r\n      newData[coinMarket][\"candles\"] = updatedCandles;\r\n      newData[coinMarket][\"tradePrice24Hour\"] = candle.acc_trade_price_24h;\r\n      newData[coinMarket][\"volume24Hour\"] = candle.acc_trade_volume_24h;\r\n      newData[coinMarket][\"changeRate24Hour\"] = candle.signed_change_rate;\r\n      newData[coinMarket][\"changePrice24Hour\"] = candle.signed_change_price;\r\n      newData[coinMarket][\"highestPrice24Hour\"] =\r\n        high > highestPrice24Hour ? high : highestPrice24Hour;\r\n      newData[coinMarket][\"lowestPrice24Hour\"] =\r\n        low < lowestPrice24Hour ? low : lowestPrice24Hour;\r\n      newData[coinMarket][\"highestPrice52Week\"] = candle.highest_52_week_price;\r\n      newData[coinMarket][\"highestDate52Week\"] = candle.highest_52_week_date;\r\n      newData[coinMarket][\"lowestPrice52Week\"] = candle.lowest_52_week_price;\r\n      newData[coinMarket][\"lowestDate52Week\"] = candle.lowest_52_week_date;\r\n    } else {\r\n      const volume = candle.trade_volume;\r\n      const tradePrice = candle.trade_price;\r\n\r\n      newData[coinMarket][\"candles\"] = [\r\n        ...targetCandles,\r\n        {\r\n          date,\r\n          datetime,\r\n          timestamp: candle.timestamp,\r\n          dateKst: candle.trade_date_kst,\r\n          timeKst: candle.trade_time_kst,\r\n          open: close,\r\n          high: close,\r\n          low: close,\r\n          close,\r\n          volume,\r\n          tradePrice,\r\n        },\r\n      ];\r\n      newData[coinMarket][\"tradePrice24Hour\"] = candle.acc_trade_price_24h;\r\n      newData[coinMarket][\"volume24Hour\"] = candle.acc_trade_volume_24h;\r\n      newData[coinMarket][\"changeRate24Hour\"] = candle.signed_change_rate;\r\n      newData[coinMarket][\"changePrice24Hour\"] = candle.signed_change_price;\r\n      newData[coinMarket][\"highestPrice24Hour\"] = dateChanged // 날짜가 바뀌지 않았을때만 고점 갱신기록, 날짜 바뀌면 지금 고점 기록\r\n        ? high\r\n        : high > highestPrice24Hour\r\n        ? high\r\n        : highestPrice24Hour;\r\n      newData[coinMarket][\"lowestPrice24Hour\"] = dateChanged\r\n        ? low\r\n        : low < lowestPrice24Hour\r\n        ? low\r\n        : lowestPrice24Hour;\r\n      newData[coinMarket][\"highestPrice52Week\"] = candle.highest_52_week_price;\r\n      newData[coinMarket][\"highestDate52Week\"] = candle.highest_52_week_date;\r\n      newData[coinMarket][\"lowestPrice52Week\"] = candle.lowest_52_week_price;\r\n      newData[coinMarket][\"lowestDate52Week\"] = candle.lowest_52_week_date;\r\n    }\r\n\r\n    return newData;\r\n  },\r\n  updates: (candles, state) => {\r\n    const candleStateDatas = state.Coin.candle.data;\r\n    const selectedTimeType = state.Coin.selectedTimeType;\r\n    const selectedTimeCount = state.Coin.selectedTimeCount;\r\n\r\n    const newData = { ...candleStateDatas }; // 원본 데이터 보장\r\n\r\n    candles.forEach((candle) => {\r\n      const coinMarket = candle.code;\r\n\r\n      const targetCandles = candleStateDatas[coinMarket].candles;\r\n      const lastCandle = targetCandles.slice(-1)[0];\r\n\r\n      const date = dateFormat(\r\n        timestampToDatetime(\r\n          selectedTimeType,\r\n          selectedTimeCount,\r\n          candle.timestamp\r\n        )\r\n      );\r\n      const datetime = timestampToDatetime(\r\n        selectedTimeType,\r\n        selectedTimeCount,\r\n        candle.timestamp\r\n      );\r\n      const open = lastCandle.open;\r\n      const high =\r\n        candle.trade_price > lastCandle.high\r\n          ? candle.trade_price\r\n          : lastCandle.high;\r\n      const low =\r\n        candle.trade_price < lastCandle.low\r\n          ? candle.trade_price\r\n          : lastCandle.low;\r\n      const close = candle.trade_price;\r\n\r\n      const highestPrice24Hour =\r\n        candleStateDatas[coinMarket].highestPrice24Hour;\r\n      const lowestPrice24Hour = candleStateDatas[coinMarket].lowestPrice24Hour;\r\n\r\n      const needUpdate = targetCandles.find(\r\n        (candle) => candle.datetime === datetime\r\n      );\r\n      const dateChanged =\r\n        d3.timeParse(\"YYYY-MM-DD\")(lastCandle.date) !==\r\n        d3.timeParse(\"YYYY-MM-DD\")(datetime);\r\n\r\n      if (needUpdate) {\r\n        const volume = needUpdate.volume + candle.trade_volume;\r\n        const tradePrice = needUpdate.tradePrice + candle.trade_price;\r\n        const updatedCandles = [...targetCandles];\r\n        updatedCandles.pop();\r\n        updatedCandles.push({\r\n          date,\r\n          datetime,\r\n          timestamp: candle.timestamp,\r\n          open,\r\n          high,\r\n          low,\r\n          close,\r\n          volume,\r\n          tradePrice,\r\n        });\r\n\r\n        newData[coinMarket][\"candles\"] = updatedCandles;\r\n        newData[coinMarket][\"tradePrice24Hour\"] = candle.acc_trade_price_24h;\r\n        newData[coinMarket][\"volume24Hour\"] = candle.acc_trade_volume_24h;\r\n        newData[coinMarket][\"changeRate24Hour\"] = candle.signed_change_rate;\r\n        newData[coinMarket][\"changePrice24Hour\"] = candle.signed_change_price;\r\n        newData[coinMarket][\"highestPrice24Hour\"] =\r\n          high > highestPrice24Hour ? high : highestPrice24Hour;\r\n        newData[coinMarket][\"lowestPrice24Hour\"] =\r\n          low < lowestPrice24Hour ? low : lowestPrice24Hour;\r\n        newData[coinMarket][\"highestPrice52Week\"] =\r\n          candle.highest_52_week_price;\r\n        newData[coinMarket][\"highestDate52Week\"] = candle.highest_52_week_date;\r\n        newData[coinMarket][\"lowestPrice52Week\"] = candle.lowest_52_week_price;\r\n        newData[coinMarket][\"lowestDate52Week\"] = candle.lowest_52_week_date;\r\n      } else {\r\n        const volume = candle.trade_volume;\r\n        const tradePrice = candle.trade_price;\r\n\r\n        newData[coinMarket][\"candles\"] = [\r\n          ...targetCandles,\r\n          {\r\n            date,\r\n            datetime,\r\n            timestamp: candle.timestamp,\r\n            dateKst: candle.trade_date_kst,\r\n            timeKst: candle.trade_time_kst,\r\n            open: close,\r\n            high: close,\r\n            low: close,\r\n            close,\r\n            volume,\r\n            tradePrice,\r\n          },\r\n        ];\r\n        newData[coinMarket][\"tradePrice24Hour\"] = candle.acc_trade_price_24h;\r\n        newData[coinMarket][\"volume24Hour\"] = candle.acc_trade_volume_24h;\r\n        newData[coinMarket][\"changeRate24Hour\"] = candle.signed_change_rate;\r\n        newData[coinMarket][\"changePrice24Hour\"] = candle.signed_change_price;\r\n        newData[coinMarket][\"highestPrice24Hour\"] = dateChanged // 날짜가 바뀌지 않았을때만 고점 갱신기록, 날짜 바뀌면 지금 고점 기록\r\n          ? high\r\n          : high > highestPrice24Hour\r\n          ? high\r\n          : highestPrice24Hour;\r\n        newData[coinMarket][\"lowestPrice24Hour\"] = dateChanged\r\n          ? low\r\n          : low < lowestPrice24Hour\r\n          ? low\r\n          : lowestPrice24Hour;\r\n        newData[coinMarket][\"highestPrice52Week\"] =\r\n          candle.highest_52_week_price;\r\n        newData[coinMarket][\"highestDate52Week\"] = candle.highest_52_week_date;\r\n        newData[coinMarket][\"lowestPrice52Week\"] = candle.lowest_52_week_price;\r\n        newData[coinMarket][\"lowestDate52Week\"] = candle.lowest_52_week_date;\r\n      }\r\n    });\r\n\r\n    return newData;\r\n  },\r\n  oneCoin: (candles, state) => {\r\n    const candleStateData = state.Coin.candle.data;\r\n    const selectedTimeType = state.Coin.selectedTimeType;\r\n    const selectedTimeCount = state.Coin.selectedTimeCount;\r\n    const market = candles[0].market;\r\n\r\n    const newCandles = candles.map((candle) => {\r\n      return {\r\n        date: dateFormat(\r\n          timestampToDatetime(\r\n            selectedTimeType,\r\n            selectedTimeCount,\r\n            candle.timestamp\r\n          )\r\n        ),\r\n        datetime: timestampToDatetime(\r\n          selectedTimeType,\r\n          selectedTimeCount,\r\n          candle.timestamp\r\n        ),\r\n        timestamp: candle.timestamp,\r\n        open: candle.opening_price,\r\n        high: candle.high_price,\r\n        low: candle.low_price,\r\n        close: candle.trade_price,\r\n        volume: candle.candle_acc_trade_volume,\r\n        tradePrice: candle.candle_acc_trade_price,\r\n      };\r\n    });\r\n\r\n    const newData = {\r\n      ...candleStateData,\r\n      [market]: {\r\n        ...candleStateData[market],\r\n        candles: newCandles,\r\n      },\r\n    };\r\n\r\n    return newData;\r\n  },\r\n  add: (candles, state) => {\r\n    const candleStateData = state.Coin.candle.data;\r\n    const selectedTimeType = state.Coin.selectedTimeType;\r\n    const selectedTimeCount = state.Coin.selectedTimeCount;\r\n    const market = candles[0].market;\r\n\r\n    const newCandles = candles.reduce((acc, candle) => {\r\n      if (!candle.timestamp) return acc;\r\n      if (\r\n        candleStateData[market].candles.find(\r\n          (stateCandle) => stateCandle.timestamp === candle.timestamp\r\n        )\r\n      )\r\n        return acc;\r\n\r\n      return [\r\n        ...acc,\r\n        {\r\n          date: dateFormat(\r\n            timestampToDatetime(\r\n              selectedTimeType,\r\n              selectedTimeCount,\r\n              candle.timestamp\r\n            )\r\n          ),\r\n          datetime: timestampToDatetime(\r\n            selectedTimeType,\r\n            selectedTimeCount,\r\n            candle.timestamp\r\n          ),\r\n          timestamp: candle.timestamp,\r\n          open: candle.opening_price,\r\n          high: candle.high_price,\r\n          low: candle.low_price,\r\n          close: candle.trade_price,\r\n          volume: candle.candle_acc_trade_volume,\r\n          tradePrice: candle.candle_acc_trade_price,\r\n        },\r\n      ];\r\n    }, []);\r\n\r\n    const newData = {\r\n      ...candleStateData,\r\n      [market]: {\r\n        ...candleStateData[market],\r\n        candles: [...newCandles, ...candleStateData[market].candles],\r\n      },\r\n    };\r\n\r\n    return newData;\r\n  },\r\n  marketNames: (names) => {\r\n    const data = {};\r\n    names.forEach((name) => {\r\n      if (name.market.split(\"-\")[0] !== \"KRW\") return;\r\n      data[name.market] = {\r\n        korean: name.korean_name,\r\n        english: name.english_name,\r\n      };\r\n    });\r\n\r\n    return data;\r\n  },\r\n};\r\n\r\nconst orderbookUtils = {\r\n  init: (orderbooks, _) => {\r\n    const data = {};\r\n    orderbooks.forEach((orderbook) => {\r\n      data[orderbook.market] = {\r\n        ...orderbook,\r\n        code: orderbook.market,\r\n      };\r\n    });\r\n\r\n    return data;\r\n  },\r\n  update: (orderbook, state) => {\r\n    const orderbookData = state.Coin.orderbook.data;\r\n    const market = orderbook.code;\r\n    return {\r\n      ...orderbookData,\r\n      [market]: {\r\n        ...orderbook,\r\n        market,\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nconst tradeListUtils = {\r\n  init: (tradeLists, state) => {\r\n    const tradeListData = state.Coin.tradeList.data;\r\n    const market = tradeLists[0].market;\r\n    return {\r\n      ...tradeListData,\r\n      [market]: tradeLists,\r\n    };\r\n  },\r\n  update: (tradeList, state) => {\r\n    const tradeListData = state.Coin.tradeList.data;\r\n    const market = tradeList.code;\r\n    if (\r\n      tradeListData[market] &&\r\n      tradeListData[market].find(\r\n        (data) => data.sequential_id === tradeList.sequential_id\r\n      )\r\n    )\r\n      return tradeListData;\r\n\r\n    // 데이터가 200개까지만 유지되게 만듦\r\n    tradeListData[market] &&\r\n      tradeListData[market].length > 200 &&\r\n      tradeListData[market].pop();\r\n\r\n    return tradeListData[market]\r\n      ? {\r\n          ...tradeListData,\r\n          [market]: [tradeList, ...tradeListData[market]],\r\n        }\r\n      : {\r\n          ...tradeListData,\r\n          [market]: [tradeList],\r\n        };\r\n  },\r\n};\r\n\r\nconst choHangul = (str) => {\r\n  const cho = [\r\n    \"ㄱ\",\r\n    \"ㄲ\",\r\n    \"ㄴ\",\r\n    \"ㄷ\",\r\n    \"ㄸ\",\r\n    \"ㄹ\",\r\n    \"ㅁ\",\r\n    \"ㅂ\",\r\n    \"ㅃ\",\r\n    \"ㅅ\",\r\n    \"ㅆ\",\r\n    \"ㅇ\",\r\n    \"ㅈ\",\r\n    \"ㅉ\",\r\n    \"ㅊ\",\r\n    \"ㅋ\",\r\n    \"ㅌ\",\r\n    \"ㅍ\",\r\n    \"ㅎ\",\r\n  ];\r\n\r\n  return [...str].reduce((acc, cur) => {\r\n    const code = cur.charCodeAt(0) - 44032;\r\n    return code > -1 && code < 11172\r\n      ? acc + cho[Math.floor(code / 588)]\r\n      : acc + cur.charAt(0);\r\n  }, \"\");\r\n};\r\n\r\nexport {\r\n  timestampToDatetime,\r\n  candleDataUtils,\r\n  orderbookUtils,\r\n  tradeListUtils,\r\n  choHangul,\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const coinApi = {\r\n  getMarketCodes: () =>\r\n    axios.get(\"https://api.upbit.com/v1/market/all?isDetails=false\"),\r\n  getInitCanldes: (coins) =>\r\n    axios.get(`https://api.upbit.com/v1/ticker?markets=${coins}`),\r\n  getInitOrderbooks: (coins) =>\r\n    axios.get(`https://api.upbit.com/v1/orderbook?markets=${coins}`),\r\n  getOneCoinCandles: ({ coin, timeType, timeCount }) => {\r\n    if (timeType === \"minutes\")\r\n      return axios\r\n        .get(\r\n          `https://api.upbit.com/v1/candles/${timeType}/${timeCount}?market=${coin}&count=200`\r\n        )\r\n        .then((res) => {\r\n          return {\r\n            ...res,\r\n            data: res.data.sort((a, b) => a.timestamp - b.timestamp),\r\n          };\r\n        });\r\n    else\r\n      return axios\r\n        .get(\r\n          `https://api.upbit.com/v1/candles/${timeType}?market=${coin}&count=200`\r\n        )\r\n        .then((res) => {\r\n          return {\r\n            ...res,\r\n            data: res.data.sort((a, b) => a.timestamp - b.timestamp),\r\n          };\r\n        });\r\n  },\r\n  getAdditionalCoinCandles: ({ coin, timeType, timeCount, datetime }) => {\r\n    if (timeType === \"minutes\")\r\n      return axios\r\n        .get(\r\n          `https://api.upbit.com/v1/candles/${timeType}/${timeCount}?market=${coin}&to=${datetime}&count=200`\r\n        )\r\n        .then((res) => {\r\n          return {\r\n            ...res,\r\n            data: res.data.sort((a, b) => a.timestamp - b.timestamp),\r\n          };\r\n        });\r\n    else\r\n      return axios\r\n        .get(\r\n          `https://api.upbit.com/v1/candles/${timeType}?market=${coin}&to=${datetime}&count=200`\r\n        )\r\n        .then((res) => {\r\n          return {\r\n            ...res,\r\n            data: res.data.sort((a, b) => a.timestamp - b.timestamp),\r\n          };\r\n        });\r\n  },\r\n  getOneCoinTradeLists: (coin) =>\r\n    axios.get(`https://api.upbit.com/v1/trades/ticks?market=${coin}&count=50`),\r\n};\r\n","import {\r\n  createRequestSaga,\r\n  createConnectSocketThunk,\r\n  createChangeOptionSaga,\r\n  requestActions,\r\n  changeOptionActions,\r\n  requestInitActions,\r\n  createConnectSocketSaga,\r\n} from \"../Lib/asyncUtil\";\r\nimport { candleDataUtils, orderbookUtils, tradeListUtils } from \"../Lib/utils\";\r\nimport { coinApi } from \"../Api/api\";\r\nimport { takeEvery, put, select } from \"redux-saga/effects\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst START_INIT = \"coin/START_INIT\";\r\nconst START_CHANGE_MARKET_AND_DATA = \"coin/START_CHANGE_MARKET_AND_DATA\";\r\nconst CHANGE_TIME_TYPE_AND_DATA = \"coin/CHANGE_TIME_TYPE_AND_DATA\";\r\nconst START_ADD_MORE_CANDLE_DATA = \"coin/START_ADD_MORE_CANDLE_DATA\";\r\n\r\nconst GET_MARKET_NAMES = \"coin/GET_MARKET_NAMES\";\r\nconst GET_MARKET_NAMES_SUCCESS = \"coin/GET_MARKET_NAMES_SUCCESS\";\r\nconst GET_MARKET_NAMES_ERROR = \"coin/GET_MARKET_NAMES_ERROR\";\r\n\r\nconst GET_INIT_CANDLES = \"coin/GET_INIT_CANDLES\";\r\nconst GET_INIT_CANDLES_SUCCESS = \"coin/GET_INIT_CANDLES_SUCCESS\";\r\nconst GET_INIT_CANDLES_ERROR = \"coin/GET_INIT_CANDLES_ERROR\";\r\n\r\nconst GET_ONE_COIN_CANDLES = \"coin/GET_ONE_COIN_CANDLES\";\r\nconst GET_ONE_COIN_CANDLES_SUCCESS = \"coin/GET_ONE_COIN_CANDLES_SUCCESS\";\r\nconst GET_ONE_COIN_CANDLES_ERROR = \"coin/GET_ONE_COIN_CANDLES_ERROR\";\r\n\r\nconst GET_ADDITIONAL_COIN_CANDLES = \"coin/GET_ADDITIONAL_COIN_CANDLES\";\r\nconst GET_ADDITIONAL_COIN_CANDLES_SUCCESS =\r\n  \"coin/GET_ADDITIONAL_COIN_CANDLES_SUCCESS\";\r\nconst GET_ADDITIONAL_COIN_CANDLES_ERROR =\r\n  \"coin/GET_ADDITIONAL_COIN_CANDLES_ERROR\";\r\n\r\nconst CONNECT_CANDLE_SOCKET = \"coin/CONNECT_CANDLE_SOCKET\";\r\nconst CONNECT_CANDLE_SOCKET_SUCCESS = \"coin/CONNECT_CANDLE_SOCKET_SUCCESS\";\r\nconst CONNECT_CANDLE_SOCKET_ERROR = \"coin/CONNECT_CANDLE_SOCKET_ERROR\";\r\n\r\nconst GET_ONE_COIN_TRADELISTS = \"coin/GET_ONE_COIN_TRADELISTS\";\r\nconst GET_ONE_COIN_TRADELISTS_SUCCESS = \"coin/GET_ONE_COIN_TRADELISTS_SUCCESS\";\r\nconst GET_ONE_COIN_TRADELISTS_ERROR = \"coin/GET_ONE_COIN_TRADELISTS_ERROR\";\r\n\r\nconst CONNECT_TRADELIST_SOCKET = \"coin/CONNECT_TRADELIST_SOCKET\";\r\nconst CONNECT_TRADELIST_SOCKET_SUCCESS =\r\n  \"coin/CONNECT_TRADELIST_SOCKET_SUCCESS\";\r\nconst CONNECT_TRADELIST_SOCKET_ERROR = \"coin/CONNECT_TRADELIST_SOCKET_ERROR\";\r\n\r\nconst GET_INIT_ORDERBOOKS = \"coin/GET_INIT_ORDERBOOKS\";\r\nconst GET_INIT_ORDERBOOKS_SUCCESS = \"coin/GET_INIT_ORDERBOOKS_SUCCESS\";\r\nconst GET_INIT_ORDERBOOKS_ERROR = \"coin/GET_INIT_ORDERBOOKS_ERROR\";\r\n\r\nconst CONNECT_ORDERBOOK_SOCKET = \"coin/CONNECT_ORDERBOOK_SOCKET\";\r\nconst CONNECT_ORDERBOOK_SOCKET_SUCCESS =\r\n  \"coin/CONNECT_ORDERBOOK_SOCKET_SUCCESS\";\r\nconst CONNECT_ORDERBOOK_SOCKET_ERROR = \"coin/CONNECT_ORDERBOOK_SOCKET_ERROR\";\r\n\r\nconst CHANGE_COIN_MARKET = \"coin/CHANGE_COIN_MARKET\";\r\nconst CHANGE_COIN_MARKET_SUCCESS = \"coin/CHANGE_COIN_MARKET_SUCCESS\";\r\n\r\nconst CHANGE_TIME_TYPE = \"coin/CHANGE_TIME_TYPE\";\r\nconst CHANGE_TIME_TYPE_SUCCESS = \"coin/CHANGE_TIME_TYPE_SUCCESS\";\r\n\r\nconst CHANGE_TIME_COUNT = \"coin/CHANGE_TIME_COUNT\";\r\nconst CHANGE_TIME_COUNT_SUCCESS = \"coin/CHANGE_TIME_COUNT_SUCCESS\";\r\n\r\nconst CHANGE_ASK_BID_ORDER = \"coin/CHANGE_ASK_BID_ORDER\";\r\nconst CHANGE_ASK_BID_ORDER_SUCCESS = \"coin/CHANGE_ASK_BID_ORDER_SUCCESS\";\r\n\r\nconst CHANGE_ORDER_PRICE = \"coin/CHANGE_ORDER_PRICE\";\r\nconst CHANGE_ORDER_PRICE_SUCCESS = \"coin/CHANGE_ORDER_PRICE_SUCCESS\";\r\n\r\nconst CHANGE_ORDER_AMOUNT = \"coin/CHANGE_ORDER_AMOUNT\";\r\nconst CHANGE_ORDER_AMOUNT_SUCCESS = \"coin/CHANGE_ORDER_AMOUNT_SUCCESS\";\r\n\r\nconst CHANGE_ORDER_TOTAL_PRICE = \"coin/CHANGE_ORDER_TOTAL_PRICE\";\r\nconst CHANGE_ORDER_TOTAL_PRICE_SUCCESS =\r\n  \"coin/CHANGE_ORDER_TOTAL_PRICE_SUCCESS\";\r\n\r\nconst CHANGE_PRICE_AND_TOTAL_PRICE = \"coin/CHANGE_PRICE_AND_TOTAL_PRICE\";\r\nconst CHANGE_AMOUNT_AND_TOTAL_PRICE = \"coin/CHANGE_AMOUNT_AND_TOTAL_PRICE\";\r\nconst CHANGE_TOTAL_PRICE_AND_AMOUNT = \"coin/CHANGE_TOTAL_PRICE_AND_AMOUNT\";\r\n\r\nconst SEARCH_COIN = \"coin/SEARCH_COIN\";\r\nconst SEARCH_COIN_SUCCESS = \"coin/SEARCH_COIN_SUCCESS\";\r\n\r\n// 업비트에서 제공하는 코인/마켓 이름들 가져오기 Saga\r\nconst getMarketNameSaga = createRequestSaga(\r\n  GET_MARKET_NAMES,\r\n  coinApi.getMarketCodes,\r\n  candleDataUtils.marketNames\r\n);\r\n\r\n// 코인/마켓 캔들들의 일봉 한 개씩 가져오기 Saga\r\nconst getInitCandleSaga = createRequestSaga(\r\n  GET_INIT_CANDLES,\r\n  coinApi.getInitCanldes,\r\n  candleDataUtils.init\r\n);\r\n\r\n// 특정 코인 봉 200개 가져오기 Saga\r\nconst getOneCoinCandlesSaga = createRequestSaga(\r\n  GET_ONE_COIN_CANDLES,\r\n  coinApi.getOneCoinCandles,\r\n  candleDataUtils.oneCoin\r\n);\r\n\r\nconst getAdditionalCoinCandlesSaga = createRequestSaga(\r\n  GET_ADDITIONAL_COIN_CANDLES,\r\n  coinApi.getAdditionalCoinCandles,\r\n  candleDataUtils.add\r\n);\r\n\r\n// 캔들 웹소켓 연결 Thunk\r\nconst connectCandleSocketThunk = createConnectSocketThunk(\r\n  CONNECT_CANDLE_SOCKET,\r\n  \"ticker\",\r\n  candleDataUtils.update\r\n);\r\n\r\n// const connectCandleSocketThunk = createConnectSocketThrottleThunk(\r\n//   CONNECT_CANDLE_SOCKET,\r\n//   \"ticker\",\r\n//   candleDataUtils.update\r\n// );\r\n\r\nconst connectCandleSocketSaga = createConnectSocketSaga(\r\n  CONNECT_CANDLE_SOCKET,\r\n  \"ticker\",\r\n  candleDataUtils.updates\r\n);\r\n\r\n// 호가창 조기 값 가져오기\r\nconst getInitOrderbookSaga = createRequestSaga(\r\n  GET_INIT_ORDERBOOKS,\r\n  coinApi.getInitOrderbooks,\r\n  orderbookUtils.init\r\n);\r\n\r\n// 호가창 웹소켓 연결 Thunk\r\nconst connectOrderbookSocketThunk = createConnectSocketThunk(\r\n  CONNECT_ORDERBOOK_SOCKET,\r\n  \"orderbook\",\r\n  orderbookUtils.update\r\n);\r\n\r\n// 체결내역 200개 가져오기\r\nconst getOneCoinTradeListsSaga = createRequestSaga(\r\n  GET_ONE_COIN_TRADELISTS,\r\n  coinApi.getOneCoinTradeLists,\r\n  tradeListUtils.init\r\n);\r\n\r\n// 체결내역 웹소켓 연결 Thunk\r\nconst connectTradeListSocketThunk = createConnectSocketThunk(\r\n  CONNECT_TRADELIST_SOCKET,\r\n  \"trade\",\r\n  tradeListUtils.update\r\n);\r\n\r\n// 선택한 코인마켓 변경하기 Saga\r\nconst changeSelectedMarket = (marketName) => ({\r\n  type: CHANGE_COIN_MARKET,\r\n  payload: marketName,\r\n});\r\nconst changeSelectedMarketSaga = createChangeOptionSaga(CHANGE_COIN_MARKET);\r\n\r\n// 선택한 타임 타입(5분봉 할때 '분') 변경하기 Saga\r\nconst changeSelectedTimeTypeSaga = createChangeOptionSaga(CHANGE_TIME_TYPE);\r\n\r\n// 선택한 타임 카운트(5분봉 할때 '5') 변경하기 Saga\r\nconst changeSelectedTimeCountSaga = createChangeOptionSaga(CHANGE_TIME_COUNT);\r\n\r\n// 매수 매도 옵션 변경하기\r\nconst changeAskBidOrder = (askBidOption) => ({\r\n  type: CHANGE_ASK_BID_ORDER,\r\n  payload: askBidOption,\r\n});\r\nconst changeAskBidOrderSaga = createChangeOptionSaga(CHANGE_ASK_BID_ORDER);\r\n\r\n// 주문 가격 변경하기\r\nconst changeOrderPriceSaga = createChangeOptionSaga(CHANGE_ORDER_PRICE);\r\n\r\n// 주문 수량 변경하기\r\nconst changeOrderAmountSaga = createChangeOptionSaga(CHANGE_ORDER_AMOUNT);\r\n\r\n// 주문 총액 변경하기\r\nconst changeOrderTotalPriceSaga = createChangeOptionSaga(\r\n  CHANGE_ORDER_TOTAL_PRICE\r\n);\r\n\r\n// 코인 검색 내용 변경하기 Saga\r\nconst searchCoin = (searchName) => ({\r\n  type: SEARCH_COIN,\r\n  payload: searchName,\r\n});\r\nconst searchCoinSaga = createChangeOptionSaga(SEARCH_COIN);\r\n\r\n// 시작시 데이터 초기화 작업들\r\nconst startInit = () => ({ type: START_INIT });\r\nfunction* startInittSaga() {\r\n  yield getMarketNameSaga(); // 코인/시장 종류 받기\r\n\r\n  const state = yield select();\r\n  const marketNames = Object.keys(state.Coin.marketNames.data);\r\n  const selectedMarket = state.Coin.selectedMarket;\r\n  const selectedTimeType = state.Coin.selectedTimeType;\r\n  const selectedTimeCount = state.Coin.selectedTimeCount;\r\n\r\n  yield getInitCandleSaga({ payload: marketNames }); // 코인 캔들 초기값 받기\r\n  yield getInitOrderbookSaga({ payload: selectedMarket }); // 호가창 초기값 받기\r\n  yield getOneCoinTradeListsSaga({ payload: selectedMarket }); // 체결내역 초기값 받기\r\n  yield getOneCoinCandlesSaga({\r\n    payload: {\r\n      coin: selectedMarket,\r\n      timeType: selectedTimeType,\r\n      timeCount: selectedTimeCount,\r\n    },\r\n  }); // 200개 코인 데이터 받기\r\n\r\n  // yield connectCandleSocketSaga({ payload: marketNames }); // 캔들 소켓 연결 사가버전\r\n  yield put(connectOrderbookSocketThunk({ payload: marketNames })); // 오더북 소켓 연결\r\n  yield put(connectTradeListSocketThunk({ payload: marketNames })); // 체결내역 소켓 연결\r\n  // yield put(connectCandleSocketThunk({ payload: marketNames })); // 캔들 소켓 연결\r\n  yield connectCandleSocketSaga({ payload: marketNames }); // 캔들 소켓 연결 사가버전\r\n}\r\n\r\n// 선택된 코인/마켓 변경 및 해당 마켓 데이터 받기\r\nconst startChangeMarketAndData = (marketName) => ({\r\n  type: START_CHANGE_MARKET_AND_DATA,\r\n  payload: marketName,\r\n});\r\nfunction* startChangeMarketAndDataSaga(action) {\r\n  const state = yield select();\r\n  const selectedTimeType = state.Coin.selectedTimeType;\r\n  const selectedTimeCount = state.Coin.selectedTimeCount;\r\n  const changingMarketName = action.payload;\r\n  const selectedCoinCandles =\r\n    state.Coin.candle.data[changingMarketName].candles;\r\n\r\n  yield put(changeSelectedMarket(changingMarketName)); // 선택된 마켓 변경\r\n  yield getInitOrderbookSaga({ payload: changingMarketName }); // 호가창 초기값 받기\r\n  yield getOneCoinTradeListsSaga({ payload: changingMarketName }); // 체결내역 초기값 받기\r\n\r\n  // 상태에 저장된 데이터가 200개 미만일때만 api콜 요청함\r\n  if (selectedCoinCandles.length < 200) {\r\n    yield getOneCoinCandlesSaga({\r\n      payload: {\r\n        coin: changingMarketName,\r\n        timeType: selectedTimeType,\r\n        timeCount: selectedTimeCount,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\n// 추가 캔들 데이터 가져오기\r\nconst startAddMoreCandleData = () => ({ type: START_ADD_MORE_CANDLE_DATA });\r\nfunction* startAddMoreCandleDataSaga() {\r\n  const state = yield select();\r\n\r\n  const selectedMarket = state.Coin.selectedMarket;\r\n  const selectedTimeType = state.Coin.selectedTimeType;\r\n  const selectedTimeCount = state.Coin.selectedTimeCount;\r\n\r\n  const isLoading = state.Loading[GET_ADDITIONAL_COIN_CANDLES];\r\n\r\n  if (isLoading) return;\r\n  const datetime =\r\n    moment(state.Coin.candle.data[selectedMarket].candles[0].date)\r\n      .utc()\r\n      .format(\"YYYY-MM-DDTHH:mm\") + \":00Z\";\r\n\r\n  yield getAdditionalCoinCandlesSaga({\r\n    payload: {\r\n      coin: selectedMarket,\r\n      timeType: selectedTimeType,\r\n      timeCount: selectedTimeCount,\r\n      datetime,\r\n    },\r\n  });\r\n}\r\n\r\n// 차트 시간 데이터 변경하고 데이터 받기\r\nconst changeTimeTypeAndData = (timeTypeAndCount) => ({\r\n  type: CHANGE_TIME_TYPE_AND_DATA,\r\n  payload: timeTypeAndCount,\r\n});\r\n\r\nfunction* changeTimeTypeAndDataSaga(action) {\r\n  const state = yield select();\r\n  const selectedMarket = state.Coin.selectedMarket;\r\n  const selectedTimeType = state.Coin.selectedTimeType;\r\n  const selectedTimeCount = state.Coin.selectedTimeCount;\r\n\r\n  const newTimeType = action.payload.timeType;\r\n  const newTimeCount = action.payload.timeCount;\r\n\r\n  if (selectedTimeType === newTimeType && selectedTimeCount === newTimeCount)\r\n    return;\r\n\r\n  yield changeSelectedTimeTypeSaga({ payload: newTimeType });\r\n  yield changeSelectedTimeCountSaga({ payload: newTimeCount });\r\n\r\n  yield getOneCoinCandlesSaga({\r\n    payload: {\r\n      coin: selectedMarket,\r\n      timeType: newTimeType,\r\n      timeCount: newTimeCount,\r\n    },\r\n  });\r\n}\r\n\r\n// 가격 변경 후 주문 총액 바꾸기\r\nconst changePriceAndTotalPrice = (price) => ({\r\n  type: CHANGE_PRICE_AND_TOTAL_PRICE,\r\n  payload: price,\r\n});\r\nfunction* changePriceAndTotalPriceSaga(action) {\r\n  const state = yield select();\r\n  const orderAmount = state.Coin.orderAmount;\r\n\r\n  yield changeOrderPriceSaga({ payload: action.payload });\r\n  yield changeOrderTotalPriceSaga({\r\n    payload: Math.ceil(action.payload * orderAmount),\r\n  });\r\n}\r\n\r\n// 주문수량 변경 후 주문 총액 바꾸기\r\nconst changeAmountAndTotalPrice = (amount) => ({\r\n  type: CHANGE_AMOUNT_AND_TOTAL_PRICE,\r\n  payload: amount,\r\n});\r\nfunction* changeAmountAndTotalPriceSaga(action) {\r\n  const state = yield select();\r\n  const orderPrice = state.Coin.orderPrice;\r\n\r\n  yield changeOrderAmountSaga({ payload: action.payload });\r\n  yield changeOrderTotalPriceSaga({\r\n    payload: Math.ceil(action.payload * orderPrice),\r\n  });\r\n}\r\n\r\n// 주문총액 변경 후 주문수량 바꾸기\r\nconst changeTotalPriceAndAmount = (totalPrice) => ({\r\n  type: CHANGE_TOTAL_PRICE_AND_AMOUNT,\r\n  payload: totalPrice,\r\n});\r\nfunction* changeTotalPriceAndAmountSaga(action) {\r\n  const state = yield select();\r\n  const orderPrice = state.Coin.orderPrice;\r\n\r\n  yield changeOrderTotalPriceSaga({ payload: action.payload });\r\n  yield changeOrderAmountSaga({\r\n    payload: orderPrice ? (action.payload / orderPrice).toFixed(8) : 0,\r\n  });\r\n}\r\n\r\nfunction* coinSaga() {\r\n  yield takeEvery(GET_MARKET_NAMES, getMarketNameSaga);\r\n  yield takeEvery(GET_INIT_CANDLES, getInitCandleSaga);\r\n  yield takeEvery(GET_INIT_ORDERBOOKS, getInitOrderbookSaga);\r\n  yield takeEvery(GET_ONE_COIN_CANDLES, getOneCoinCandlesSaga);\r\n  yield takeEvery(GET_ONE_COIN_TRADELISTS, getOneCoinTradeListsSaga);\r\n\r\n  yield takeEvery(CHANGE_COIN_MARKET, changeSelectedMarketSaga);\r\n  yield takeEvery(CHANGE_ASK_BID_ORDER, changeAskBidOrderSaga);\r\n  yield takeEvery(CHANGE_ORDER_PRICE, changeOrderPriceSaga);\r\n  yield takeEvery(CHANGE_ORDER_AMOUNT, changeOrderAmountSaga);\r\n  yield takeEvery(CHANGE_ORDER_TOTAL_PRICE, changeOrderTotalPriceSaga);\r\n  yield takeEvery(SEARCH_COIN, searchCoinSaga);\r\n\r\n  yield takeEvery(START_INIT, startInittSaga);\r\n  yield takeEvery(START_CHANGE_MARKET_AND_DATA, startChangeMarketAndDataSaga);\r\n  yield takeEvery(START_ADD_MORE_CANDLE_DATA, startAddMoreCandleDataSaga);\r\n  yield takeEvery(CHANGE_TIME_TYPE_AND_DATA, changeTimeTypeAndDataSaga);\r\n\r\n  yield takeEvery(CHANGE_PRICE_AND_TOTAL_PRICE, changePriceAndTotalPriceSaga);\r\n  yield takeEvery(CHANGE_AMOUNT_AND_TOTAL_PRICE, changeAmountAndTotalPriceSaga);\r\n  yield takeEvery(CHANGE_TOTAL_PRICE_AND_AMOUNT, changeTotalPriceAndAmountSaga);\r\n}\r\n\r\nconst initialState = {\r\n  selectedMarket: \"KRW-BTC\",\r\n  selectedTimeType: \"minutes\",\r\n  selectedTimeCount: 5,\r\n  selectedAskBidOrder: \"bid\",\r\n  orderPrice: 0,\r\n  orderAmount: 0,\r\n  orderTotalPrice: 0,\r\n  searchCoin: \"\",\r\n  marketNames: {\r\n    error: false,\r\n    data: {\r\n      \"KRW-BTC\": \"비트코인\",\r\n    },\r\n  },\r\n  candle: {\r\n    error: false,\r\n    data: {\r\n      \"KRW-BTC\": {\r\n        candles: [\r\n          // { date: new Date(), open: 1, close: 1, high: 1, low: 1, volume: 1 },\r\n        ],\r\n        tradePrice24Hour: 0,\r\n        volume24Hour: 0,\r\n        changeRate24Hour: 0,\r\n      },\r\n    },\r\n  },\r\n  orderbook: {\r\n    error: false,\r\n    data: {\r\n      \"KRW-BTC\": {\r\n        total_bid_size: 0,\r\n        total_ask_size: 0,\r\n        orderbook_units: [],\r\n      },\r\n    },\r\n  },\r\n  tradeList: {\r\n    error: false,\r\n    data: {},\r\n  },\r\n};\r\n\r\nconst coinReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // 코인 마켓 이름들\r\n    case GET_MARKET_NAMES_SUCCESS:\r\n    case GET_MARKET_NAMES_ERROR:\r\n      return requestActions(GET_MARKET_NAMES, \"marketNames\")(state, action);\r\n\r\n    // 초기 캔들\r\n    case GET_INIT_CANDLES_SUCCESS:\r\n    case GET_INIT_CANDLES_ERROR:\r\n      return requestInitActions(GET_INIT_CANDLES, \"candle\")(state, action);\r\n\r\n    // 코인 한 개 정해서 200개\r\n    case GET_ONE_COIN_CANDLES_SUCCESS:\r\n    case GET_ONE_COIN_CANDLES_ERROR:\r\n      return requestActions(GET_ONE_COIN_CANDLES, \"candle\")(state, action);\r\n\r\n    // 추가 코인 데이터 로드\r\n    case GET_ADDITIONAL_COIN_CANDLES_SUCCESS:\r\n    case GET_ADDITIONAL_COIN_CANDLES_ERROR:\r\n      return requestActions(GET_ADDITIONAL_COIN_CANDLES, \"candle\")(\r\n        state,\r\n        action\r\n      );\r\n\r\n    // 캔들 실시간 정보\r\n    case CONNECT_CANDLE_SOCKET_SUCCESS:\r\n    case CONNECT_CANDLE_SOCKET_ERROR:\r\n      return requestActions(CONNECT_CANDLE_SOCKET, \"candle\")(state, action);\r\n\r\n    // 호가창 초기값\r\n    case GET_INIT_ORDERBOOKS_SUCCESS:\r\n    case GET_INIT_ORDERBOOKS_ERROR:\r\n      return requestActions(GET_INIT_ORDERBOOKS, \"orderbook\")(state, action);\r\n\r\n    // 호가창 실시간 정보\r\n    case CONNECT_ORDERBOOK_SOCKET_SUCCESS:\r\n    case CONNECT_ORDERBOOK_SOCKET_ERROR:\r\n      return requestActions(CONNECT_ORDERBOOK_SOCKET, \"orderbook\")(\r\n        state,\r\n        action\r\n      );\r\n\r\n    // 체결내역 200개 초기값\r\n    case GET_ONE_COIN_TRADELISTS_SUCCESS:\r\n    case GET_ONE_COIN_TRADELISTS_ERROR:\r\n      return requestActions(GET_ONE_COIN_TRADELISTS, \"tradeList\")(\r\n        state,\r\n        action\r\n      );\r\n\r\n    // 체결내역 실시간 정보\r\n    case CONNECT_TRADELIST_SOCKET_SUCCESS:\r\n    case CONNECT_TRADELIST_SOCKET_ERROR:\r\n      return requestActions(CONNECT_TRADELIST_SOCKET, \"tradeList\")(\r\n        state,\r\n        action\r\n      );\r\n\r\n    case CHANGE_COIN_MARKET_SUCCESS:\r\n      return changeOptionActions(CHANGE_COIN_MARKET, \"selectedMarket\")(\r\n        state,\r\n        action\r\n      );\r\n\r\n    case CHANGE_TIME_TYPE_SUCCESS:\r\n      return changeOptionActions(CHANGE_TIME_TYPE, \"selectedTimeType\")(\r\n        state,\r\n        action\r\n      );\r\n\r\n    case CHANGE_TIME_COUNT_SUCCESS:\r\n      return changeOptionActions(CHANGE_TIME_COUNT, \"selectedTimeCount\")(\r\n        state,\r\n        action\r\n      );\r\n\r\n    case CHANGE_ASK_BID_ORDER_SUCCESS:\r\n      return changeOptionActions(CHANGE_ASK_BID_ORDER, \"selectedAskBidOrder\")(\r\n        state,\r\n        action\r\n      );\r\n\r\n    case CHANGE_ORDER_PRICE_SUCCESS:\r\n      return changeOptionActions(CHANGE_ORDER_PRICE, \"orderPrice\")(\r\n        state,\r\n        action\r\n      );\r\n    case CHANGE_ORDER_AMOUNT_SUCCESS:\r\n      return changeOptionActions(CHANGE_ORDER_AMOUNT, \"orderAmount\")(\r\n        state,\r\n        action\r\n      );\r\n    case CHANGE_ORDER_TOTAL_PRICE_SUCCESS:\r\n      return changeOptionActions(CHANGE_ORDER_TOTAL_PRICE, \"orderTotalPrice\")(\r\n        state,\r\n        action\r\n      );\r\n\r\n    case SEARCH_COIN_SUCCESS:\r\n      return changeOptionActions(SEARCH_COIN, \"searchCoin\")(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport {\r\n  startInit,\r\n  startChangeMarketAndData,\r\n  startAddMoreCandleData,\r\n  changeTimeTypeAndData,\r\n  coinReducer,\r\n  coinSaga,\r\n  changeAskBidOrder,\r\n  changePriceAndTotalPrice,\r\n  changeAmountAndTotalPrice,\r\n  changeTotalPriceAndAmount,\r\n  searchCoin,\r\n};\r\n","import { throttle } from \"lodash\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst withSize = () => (OriginalComponent) => (props) => {\r\n  const [widthSize, setWidthSize] = useState(window.innerWidth);\r\n  const [heightSize, setHeightSize] = useState(window.innerHeight);\r\n\r\n  const handleSize = useCallback(() => {\r\n    setWidthSize(window.innerWidth);\r\n    setHeightSize(window.innerHeight);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", throttle(handleSize, 200));\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleSize);\r\n    };\r\n  }, [handleSize]);\r\n\r\n  return (\r\n    <OriginalComponent\r\n      {...props}\r\n      widthSize={widthSize}\r\n      heightSize={heightSize}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withSize;\r\n","const viewSize = {\r\n  mobileS: 480,\r\n  mobileM: 770,\r\n  tablet: 1279,\r\n  desktop: 1280,\r\n};\r\n\r\nconst theme = {\r\n  test: \"rgb(255, 215, 0)\",\r\n  deepBlue: \"#093687\",\r\n  skyBlue1: \"rgba(0,98,223,.03)\",\r\n  skyBlue2: \"rgba(0,98,223,.09)\",\r\n  lightPink1: \"rgba(216,14,53,.03);\",\r\n  lightPink2: \"rgba(216,14,53,.09);\",\r\n  strongRed: \"#d80e35\",\r\n  strongBlue: \"#115DCB\",\r\n  priceUp: \"rgb(210, 79, 69)\",\r\n  priceDown: \"rgb(18, 97, 196)\",\r\n  priceUpTrans: \"rgba(210, 79, 69, 0.5)\",\r\n  priceDownTrans: \"rgba(18, 97, 196, 0.5)\",\r\n  middleGray: \"#00000033\",\r\n  lightGray: \"rgb(244, 245, 248)\",\r\n  lightGray1: \"rgb(249, 250, 252)\",\r\n  lightGray2: \"rgb(212, 214, 220)\",\r\n  mobileS: `(max-width: ${viewSize.mobileS}px)`,\r\n  mobileM: `(max-width: ${viewSize.mobileM}px)`,\r\n  tablet: `(max-width: ${viewSize.tablet}px)`,\r\n  desktop: `(min-width: ${viewSize.desktop}px)`,\r\n};\r\n\r\nexport { viewSize };\r\nexport default theme;\r\n","import React from \"react\";\r\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom'\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\n\r\nfunction Header() {\r\n  return(\r\n<Navbar style={{backgroundColor:'rgb(255, 215, 0)'}}  expand=\"lg\">\r\n<Container>\r\n<Navbar.Brand href=\"/home\">\r\n        <img\r\n          src=\"/3.jpeg\"\r\n          width=\"50\"\r\n          height=\"50\"\r\n          className=\"d-inline-block align-top\"\r\n        />{' '}\r\n      KuoCoin\r\n      </Navbar.Brand>\r\n    <Nav className=\"ml-auto\">\r\n      <Nav.Link href='/'>거래소</Nav.Link>\r\n      <Nav.Link href='/explorer'>Kuo Explorer</Nav.Link>\r\n      <Nav.Link href='https://www.blockmedia.co.kr/'>Topic</Nav.Link>\r\n      <Nav.Link href='login'>Login</Nav.Link>\r\n    </Nav>\r\n</Container>\r\n</Navbar>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst withSelectedCoinName = () => (OriginalComponent) => (props) => {\r\n  const selectedMarket = useSelector((state) => state.Coin.selectedMarket);\r\n  const coinNameKor = useSelector(\r\n    (state) => state.Coin.marketNames.data[selectedMarket].korean\r\n  );\r\n  const coinNameEng = useSelector(\r\n    (state) => state.Coin.marketNames.data[selectedMarket].english\r\n  );\r\n\r\n  const splitedName = selectedMarket.split(\"-\");\r\n  const coinSymbol = splitedName[1];\r\n  const coinNameAndMarketEng = splitedName[1] + \"/\" + splitedName[0];\r\n\r\n  return (\r\n    <OriginalComponent\r\n      {...props}\r\n      coinNameKor={coinNameKor}\r\n      coinNameEng={coinNameEng}\r\n      coinSymbol={coinSymbol}\r\n      coinNameAndMarketEng={coinNameAndMarketEng}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withSelectedCoinName;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst withSelectedCoinPrice = () => (OriginalComponent) => (props) => {\r\n  const selectedMarket = useSelector((state) => state.Coin.selectedMarket);\r\n  const selectedCoinData = useSelector(\r\n    (state) => state.Coin.candle.data[selectedMarket]\r\n  );\r\n\r\n  // 24시간 고가 저가\r\n  const highestPrice24Hour = useSelector(\r\n    (state) => state.Coin.candle.data[selectedMarket][\"highestPrice24Hour\"]\r\n  );\r\n  const lowestPrice24Hour = useSelector(\r\n    (state) => state.Coin.candle.data[selectedMarket][\"lowestPrice24Hour\"]\r\n  );\r\n\r\n  // 52주 고가 저가\r\n  const highestPrice52Week = useSelector(\r\n    (state) => state.Coin.candle.data[selectedMarket].highestPrice52Week\r\n  );\r\n  const highestDate52Week = useSelector(\r\n    (state) => state.Coin.candle.data[selectedMarket].highestDate52Week\r\n  );\r\n  const lowestPrice52Week = useSelector(\r\n    (state) => state.Coin.candle.data[selectedMarket].lowestPrice52Week\r\n  );\r\n  const lowestDate52Week = useSelector(\r\n    (state) => state.Coin.candle.data[selectedMarket].lowestDate52Week\r\n  );\r\n\r\n  // 24시간 거래대금, 거래량\r\n  const tradePrice24Hour = Math.floor(selectedCoinData.tradePrice24Hour);\r\n  const volume24Hour = Math.floor(selectedCoinData.volume24Hour);\r\n\r\n  // 24시간 가격 변화율, 변화량\r\n  const changeRate24Hour =\r\n    Math.round(selectedCoinData.changeRate24Hour * 10000) / 100;\r\n  const changePrice24Hour = selectedCoinData.changePrice24Hour\r\n    ? selectedCoinData.changePrice24Hour\r\n    : 0;\r\n\r\n  // 전일, 당일 가격\r\n  const selecteCoinCadnles = useSelector(\r\n    (state) => state.Coin.candle.data[selectedMarket].candles\r\n  );\r\n  const lastCandleIndex = selecteCoinCadnles.length - 1;\r\n\r\n  const beforeDayPrice = selecteCoinCadnles.length\r\n    ? selecteCoinCadnles[lastCandleIndex].close - changePrice24Hour\r\n    : 0;\r\n\r\n  const price = selecteCoinCadnles.length\r\n    ? selecteCoinCadnles[selecteCoinCadnles.length - 1].close\r\n    : 0;\r\n\r\n  return (\r\n    <OriginalComponent\r\n      {...props}\r\n      highestPrice52Week={highestPrice52Week}\r\n      highestDate52Week={highestDate52Week}\r\n      lowestPrice52Week={lowestPrice52Week}\r\n      lowestDate52Week={lowestDate52Week}\r\n      highestPrice24Hour={highestPrice24Hour}\r\n      lowestPrice24Hour={lowestPrice24Hour}\r\n      tradePrice24Hour={tradePrice24Hour}\r\n      volume24Hour={volume24Hour}\r\n      changeRate24Hour={changeRate24Hour}\r\n      changePrice24Hour={changePrice24Hour}\r\n      beforeDayPrice={beforeDayPrice}\r\n      price={price}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withSelectedCoinPrice;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"styled-components\";\r\n\r\nconst withThemeData = () => (OriginalComponent) => (props) => {\r\n  const theme = useContext(ThemeContext); // 테마 정보\r\n  return <OriginalComponent {...props} theme={theme} />;\r\n};\r\n\r\nexport default withThemeData;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport withSelectedCoinName from \"../../Container/withSelectedCoinName\";\r\nimport withSelectedCoinPrice from \"../../Container/withSelectedCoinPrice\";\r\nimport withThemeData from \"../../Container/withThemeData\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst St = {\r\n  CoinInfoContainer: styled.section`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    background-color: white;\r\n    padding: 10px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.lightGray2};\r\n  `,\r\n  HiddenH3: styled.h3`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    clip: rect(0, 0);\r\n    clip-path: polygon(0, 0);\r\n    overflow: hidden;\r\n    text-indent: -9999px;\r\n  `,\r\n  CoinInfoMain: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    min-width: 380px;\r\n  `,\r\n  CoinLogo: styled.i`\r\n    display: inline-block;\r\n    width: 35px;\r\n    height: 35px;\r\n    background-image: ${({ coinSymbol }) =>\r\n      `url(https://static.upbit.com/logos/${coinSymbol}.png)`};\r\n    background-size: cover;\r\n    margin-left: 5px;\r\n  `,\r\n  CoinNameContainer: styled.div`\r\n    padding: 0 8px 0 13px;\r\n  `,\r\n  CoinName: styled.strong`\r\n    font-size: 1.7rem;\r\n    font-weight: 800;\r\n    color: #2b2b2b;\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 1.5rem;\r\n    }\r\n  `,\r\n  CoinMarketName: styled.span`\r\n    display: flex;\r\n    font-size: 0.9rem;\r\n    flex-direction: column;\r\n    padding-left: 5px;\r\n    margin-top: 7px;\r\n  `,\r\n  PriceInfo: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n  `,\r\n  Price: styled.strong`\r\n    color: ${({ priceColor }) => priceColor};\r\n    font-size: 2rem;\r\n    font-weight: 800;\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 1.5rem;\r\n    }\r\n  `,\r\n  PriceUnit: styled.span`\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n    padding-left: 5px;\r\n  `,\r\n  ChangeContainer: styled.span`\r\n    font-size: 0.8rem;\r\n    margin-top: 5px;\r\n  `,\r\n  ChangeRate: styled.strong`\r\n    font-size: 1rem;\r\n    color: ${({ priceColor }) => priceColor};\r\n    margin: 0 10px 0 5px;\r\n    font-weight: 800;\r\n  `,\r\n  ChangePrice: styled.strong`\r\n    font-size: 1rem;\r\n    font-weight: 800;\r\n    color: ${({ priceColor }) => priceColor};\r\n  `,\r\n  TradeInfoContainer: styled.dl`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    width: 45%;\r\n    height: 100%;\r\n    margin: 0 10px 0 0;\r\n\r\n    @media ${({ theme, mobileMNone }) => (mobileMNone ? theme.mobileM : true)} {\r\n      display: none;\r\n    }\r\n  `,\r\n  InfoContainer: styled.div`\r\n    height: 100%;\r\n    margin-left: 15px;\r\n    @media ${({ theme, tabletNone }) => (tabletNone ? theme.tablet : true)} {\r\n      display: none;\r\n    }\r\n    @media ${({ theme, mobileMNone }) => (mobileMNone ? theme.mobileM : true)} {\r\n      display: none;\r\n    }\r\n  `,\r\n  TradeInfo: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 50%;\r\n    min-width: ${({ minWidth }) => minWidth || \"none\"};\r\n    border-bottom: 1px solid ${({ borderColor }) => borderColor || \"none\"};\r\n    padding: 5px 0 5px 0;\r\n    font-size: 0.8rem;\r\n  `,\r\n  TradeDT: styled.dt`\r\n    display: inline-block;\r\n    min-width: 50px;\r\n    height: 50%;\r\n  `,\r\n  TradeDD: styled.dd`\r\n    margin: 0;\r\n    display: inline-block;\r\n    height: 50%;\r\n    color: ${({ fontColor }) => fontColor || \"black\"};\r\n    font-weight: ${({ fontWeight }) => fontWeight || 500};\r\n  `,\r\n};\r\n\r\nconst CoinInfoHeader = ({\r\n  theme,\r\n  coinNameKor,\r\n  coinSymbol,\r\n  coinNameAndMarketEng,\r\n  highestPrice24Hour,\r\n  lowestPrice24Hour,\r\n  changeRate24Hour,\r\n  changePrice24Hour,\r\n  tradePrice24Hour,\r\n  volume24Hour,\r\n  price,\r\n}) => {\r\n  const priceColor = changeRate24Hour > 0 ? theme.priceUp : theme.priceDown;\r\n  return (\r\n    <St.CoinInfoContainer>\r\n      <St.HiddenH3>코인 가격 및 기타 정보</St.HiddenH3>\r\n      <St.CoinInfoMain>\r\n        <St.CoinLogo coinSymbol={coinSymbol} title={`${coinNameKor} 로고`} />\r\n        <St.CoinNameContainer>\r\n          <St.CoinName>{coinNameKor}</St.CoinName>\r\n          <St.CoinMarketName>{coinNameAndMarketEng}</St.CoinMarketName>\r\n        </St.CoinNameContainer>\r\n        <St.PriceInfo>\r\n          <St.Price priceColor={priceColor}>\r\n            {price.toLocaleString()}\r\n            <St.PriceUnit priceColor={priceColor}>KRW</St.PriceUnit>\r\n          </St.Price>\r\n          <St.ChangeContainer>\r\n            전일대비\r\n            <St.ChangeRate priceColor={priceColor}>\r\n              {changeRate24Hour}%\r\n            </St.ChangeRate>\r\n            <St.ChangePrice priceColor={priceColor}>\r\n              {changePrice24Hour.toLocaleString()}\r\n            </St.ChangePrice>\r\n          </St.ChangeContainer>\r\n        </St.PriceInfo>\r\n      </St.CoinInfoMain>\r\n      <St.TradeInfoContainer mobileMNone={true}>\r\n        <St.InfoContainer tabletNone={true}>\r\n          <St.TradeInfo minWidth={\"100px\"} borderColor={theme.lightGray2}>\r\n            <St.TradeDT>고가</St.TradeDT>\r\n            <St.TradeDD fontColor={theme.priceUp} fontWeight={800}>\r\n              {highestPrice24Hour ? highestPrice24Hour.toLocaleString() : 0}\r\n            </St.TradeDD>\r\n          </St.TradeInfo>\r\n          <St.TradeInfo minWidth={\"100px\"}>\r\n            <St.TradeDT borderColor={theme.lightGray2}>저가</St.TradeDT>\r\n            <St.TradeDD fontColor={theme.priceDown} fontWeight={800}>\r\n              {lowestPrice24Hour ? lowestPrice24Hour.toLocaleString() : 0}\r\n            </St.TradeDD>\r\n          </St.TradeInfo>\r\n        </St.InfoContainer>\r\n        <St.InfoContainer mobileMNone={true}>\r\n          <St.TradeInfo minWidth={\"220px\"} borderColor={theme.lightGray2}>\r\n            <St.TradeDT>거래량(24h)</St.TradeDT>\r\n            <St.TradeDD>{`${volume24Hour.toLocaleString()} ${coinSymbol}`}</St.TradeDD>\r\n          </St.TradeInfo>\r\n          <St.TradeInfo minWidth={\"220px\"}>\r\n            <St.TradeDT borderColor={theme.lightGray2}>\r\n              거래대금(24h)\r\n            </St.TradeDT>\r\n            <St.TradeDD>\r\n              {tradePrice24Hour ? tradePrice24Hour.toLocaleString() : 0} KRW\r\n            </St.TradeDD>\r\n          </St.TradeInfo>\r\n        </St.InfoContainer>\r\n      </St.TradeInfoContainer>\r\n    </St.CoinInfoContainer>\r\n  );\r\n};\r\n\r\nexport default withSelectedCoinName()(\r\n  withSelectedCoinPrice()(withThemeData()(React.memo(CoinInfoHeader)))\r\n);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst withSelectedOption = () => (OriginalComponent) => (props) => {\r\n  const selectedMarket = useSelector((state) => state.Coin.selectedMarket);\r\n  const selectedTimeType = useSelector((state) => state.Coin.selectedTimeType);\r\n  const selectedTimeCount = useSelector(\r\n    (state) => state.Coin.selectedTimeCount\r\n  );\r\n  const selectedAskBidOrder = useSelector(\r\n    (state) => state.Coin.selectedAskBidOrder\r\n  );\r\n  const searchCoin = useSelector((state) => state.Coin.searchCoin);\r\n  const orderPrice = useSelector((state) => state.Coin.orderPrice);\r\n  const orderAmount = useSelector((state) => state.Coin.orderAmount);\r\n  const orderTotalPrice = useSelector((state) => state.Coin.orderTotalPrice);\r\n\r\n  return (\r\n    <OriginalComponent\r\n      {...props}\r\n      selectedMarket={selectedMarket}\r\n      selectedTimeType={selectedTimeType}\r\n      selectedTimeCount={selectedTimeCount}\r\n      selectedAskBidOrder={selectedAskBidOrder}\r\n      searchCoinInput={searchCoin}\r\n      orderPrice={orderPrice}\r\n      orderAmount={orderAmount}\r\n      orderTotalPrice={orderTotalPrice}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withSelectedOption;\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport withSelectedOption from \"../../Container/withSelectedOption\";\r\nimport withThemeData from \"../../Container/withThemeData\";\r\nimport { changeTimeTypeAndData } from \"../../Reducer/coinReducer\";\r\n\r\nconst St = {\r\n  Container: styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    background-color: white;\r\n    border-bottom: 1px solid ${({ theme }) => theme.lightGray2};\r\n  `,\r\n  HiddenH3: styled.h3`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    clip: rect(0, 0);\r\n    clip-path: polygon(0, 0);\r\n    overflow: hidden;\r\n    text-indent: -9999px;\r\n  `,\r\n  TimeBtnContainer: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 30px;\r\n  `,\r\n  TimeBtn: styled.button`\r\n    /* width: 50px; */\r\n    height: 20px;\r\n    width: 38px;\r\n    margin-left: 5px;\r\n    font-size: 0.8rem;\r\n    background-color: white;\r\n\r\n    border: ${({ theme, isSelected }) =>\r\n      isSelected ? `2px solid black` : `1px solid ${theme.lightGray2}`};\r\n    outline: none;\r\n    cursor: pointer;\r\n  `,\r\n};\r\n\r\nconst ChartDataConsole = ({ theme, selectedTimeCount, selectedTimeType }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const changeChartTime = useCallback(\r\n    (timeCount, timeType) => () => {\r\n      dispatch(changeTimeTypeAndData({ timeCount, timeType }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <St.Container theme={theme}>\r\n      <St.HiddenH3>차트에 표시할 캔들의 시간 선택</St.HiddenH3>\r\n      <St.TimeBtnContainer>\r\n        <St.TimeBtn\r\n          onClick={changeChartTime(1, \"minutes\")}\r\n          isSelected={selectedTimeCount === 1 && selectedTimeType === \"minutes\"}\r\n        >\r\n          1m\r\n        </St.TimeBtn>\r\n        <St.TimeBtn\r\n          onClick={changeChartTime(3, \"minutes\")}\r\n          isSelected={selectedTimeCount === 3 && selectedTimeType === \"minutes\"}\r\n        >\r\n          3m\r\n        </St.TimeBtn>\r\n        <St.TimeBtn\r\n          onClick={changeChartTime(5, \"minutes\")}\r\n          isSelected={selectedTimeCount === 5 && selectedTimeType === \"minutes\"}\r\n        >\r\n          5m\r\n        </St.TimeBtn>\r\n        <St.TimeBtn\r\n          onClick={changeChartTime(10, \"minutes\")}\r\n          isSelected={\r\n            selectedTimeCount === 10 && selectedTimeType === \"minutes\"\r\n          }\r\n        >\r\n          10m\r\n        </St.TimeBtn>\r\n        <St.TimeBtn\r\n          onClick={changeChartTime(15, \"minutes\")}\r\n          isSelected={\r\n            selectedTimeCount === 15 && selectedTimeType === \"minutes\"\r\n          }\r\n        >\r\n          15m\r\n        </St.TimeBtn>\r\n        <St.TimeBtn\r\n          onClick={changeChartTime(60, \"minutes\")}\r\n          isSelected={\r\n            selectedTimeCount === 60 && selectedTimeType === \"minutes\"\r\n          }\r\n        >\r\n          1h\r\n        </St.TimeBtn>\r\n        <St.TimeBtn\r\n          onClick={changeChartTime(240, \"minutes\")}\r\n          isSelected={\r\n            selectedTimeCount === 240 && selectedTimeType === \"minutes\"\r\n          }\r\n        >\r\n          4h\r\n        </St.TimeBtn>\r\n        <St.TimeBtn\r\n          onClick={changeChartTime(1, \"days\")}\r\n          isSelected={selectedTimeCount === 1 && selectedTimeType === \"days\"}\r\n        >\r\n          1d\r\n        </St.TimeBtn>\r\n      </St.TimeBtnContainer>\r\n    </St.Container>\r\n  );\r\n};\r\n\r\nexport default withSelectedOption()(withThemeData()(ChartDataConsole));\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst St = {\r\n  Container: styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${({ isCenter }) =>\r\n      !isCenter &&\r\n      css`\r\n        align-items: stretch;\r\n        margin-top: 200px;\r\n      `}\r\n  `,\r\n};\r\n\r\nconst Loading = ({ center = true }) => {\r\n  return (\r\n    <St.Container isCenter={center}>\r\n      <ReactLoading\r\n        type={\"spokes\"}\r\n        color={\"rgb(255, 215, 0)\"}\r\n        height={\"100px\"}\r\n        width={\"100px\"}\r\n      />\r\n    </St.Container>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst withOHLCData = () => (OriginalComponent) => () => {\r\n  const selectedMarket = useSelector((state) => state.Coin.selectedMarket); // 선택된 코인/마켓\r\n  const selectedCandles = useSelector(\r\n    (state) => state.Coin.candle.data[selectedMarket].candles\r\n  ); // 선택된 코인/마켓 캔들 정보\r\n\r\n  // return selectedCandles.length ? (\r\n  //   <OriginalComponent data={selectedCandles} />\r\n  // ) : (\r\n  //   <div className=\"center\">Chart Loading</div>\r\n  // );\r\n  return <OriginalComponent data={selectedCandles} />;\r\n};\r\n\r\nexport default withOHLCData;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst withLoadingData = () => (OriginalComponent) => (props) => {\r\n  const isCandleLoading = useSelector(\r\n    (state) => state.Loading[\"coin/GET_ONE_COIN_CANDLES\"]\r\n  );\r\n  const isOrderbookLoading = useSelector(\r\n    (state) => state.Loading[\"coin/GET_INIT_ORDERBOOKS\"]\r\n  );\r\n  const isTradeListLoading = useSelector(\r\n    (state) => state.Loading[\"coin/GET_ONE_COIN_TRADELISTS\"]\r\n  );\r\n  const isInitCandleLoading = useSelector(\r\n    (state) => state.Loading[\"coin/GET_INIT_CANDLES\"]\r\n  );\r\n  const isMarketNamesLoading = useSelector(\r\n    (state) => state.Loading[\"coin/GET_MARKET_NAMES\"]\r\n  );\r\n\r\n  return (\r\n    <OriginalComponent\r\n      {...props}\r\n      isCandleLoading={isCandleLoading}\r\n      isOrderbookLoading={isOrderbookLoading}\r\n      isTradeListLoading={isTradeListLoading}\r\n      isInitCandleLoading={isInitCandleLoading}\r\n      isMarketNamesLoading={isMarketNamesLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withLoadingData;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startAddMoreCandleData } from \"../../Reducer/coinReducer\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\nimport {\r\n  elderRay,\r\n  ema,\r\n  discontinuousTimeScaleProviderBuilder,\r\n  Chart,\r\n  ChartCanvas,\r\n  CurrentCoordinate,\r\n  BarSeries,\r\n  CandlestickSeries,\r\n  ElderRaySeries,\r\n  LineSeries,\r\n  MovingAverageTooltip,\r\n  OHLCTooltip,\r\n  SingleValueTooltip,\r\n  mouseBasedZoomAnchor,\r\n  XAxis,\r\n  YAxis,\r\n  CrossHairCursor,\r\n  EdgeIndicator,\r\n  MouseCoordinateX,\r\n  MouseCoordinateY,\r\n  ZoomButtons,\r\n  withDeviceRatio,\r\n  withSize,\r\n} from \"react-financial-charts\";\r\n\r\nimport Loading from \"../Global/Loading\";\r\n\r\nimport withOHLCData from \"../../Container/withOHLCData\";\r\nimport withThemeData from \"../../Container/withThemeData\";\r\nimport withSelectedOption from \"../../Container/withSelectedOption\";\r\nimport withLoadingData from \"../../Container/withLoadingData\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst barChartExtents = (data) => {\r\n  return data.volume;\r\n};\r\n\r\nconst candleChartExtents = (data) => {\r\n  return [data.high, data.low];\r\n};\r\n\r\nconst yEdgeIndicator = (data) => {\r\n  return data.close;\r\n};\r\n\r\nconst volumeSeries = (data) => {\r\n  return data.volume;\r\n};\r\n\r\nconst St = {\r\n  ChartContainer: styled.section`\r\n    width: 100%;\r\n    height: 500px;\r\n    background-color: white;\r\n  `,\r\n  HiddenH3: styled.h3`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    clip: rect(0, 0);\r\n    clip-path: polygon(0, 0);\r\n    overflow: hidden;\r\n    text-indent: -9999px;\r\n  `,\r\n};\r\n\r\nconst margin = { left: 10, right: 80, top: 20, bottom: 20 };\r\nconst minHeight = 350;\r\n\r\nconst MainChart = ({\r\n  data: initialData,\r\n  height,\r\n  width,\r\n  ratio,\r\n  selectedTimeType,\r\n  theme,\r\n  isCandleLoading,\r\n}) => {\r\n  if (height > 500) height = 500;\r\n  const dispatch = useDispatch();\r\n\r\n  const dateTimeFormat =\r\n    selectedTimeType === \"days\" || selectedTimeType === \"weeks\"\r\n      ? \"%y-%m-%d\"\r\n      : \"%y-%m-%d %H:%M\";\r\n  const timeDisplayFormat = timeFormat(dateTimeFormat);\r\n  const pricesDisplayFormat = format(\"\");\r\n\r\n  const openCloseColor = (data) => {\r\n    return data.close > data.open ? theme.priceUp : theme.priceDown;\r\n  };\r\n\r\n  const volumeColor = (data) => {\r\n    return data.close > data.open ? theme.priceUpTrans : theme.priceDownTrans;\r\n  };\r\n\r\n  const xScaleProvider = discontinuousTimeScaleProviderBuilder().inputDateAccessor(\r\n    (d) => d.date\r\n  );\r\n\r\n  const ema12 = ema()\r\n    .id(1)\r\n    .options({ windowSize: 12 })\r\n    .merge((d, c) => {\r\n      d.ema12 = c;\r\n    })\r\n    .accessor((d) => d.ema12);\r\n\r\n  const ema26 = ema()\r\n    .id(2)\r\n    .options({ windowSize: 26 })\r\n    .merge((d, c) => {\r\n      d.ema26 = c;\r\n    })\r\n    .accessor((d) => d.ema26);\r\n\r\n  const elder = elderRay();\r\n\r\n  const calculatedData = elder(ema26(ema12(initialData)));\r\n\r\n  const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(\r\n    calculatedData\r\n  );\r\n\r\n  // 확대 축소 초기 범위를 정하는 xExtendts설정, max와 min이 변하면 새로운 데이터 추가시 줌 설정이 풀린다\r\n  const max = xAccessor(data[Math.min(199, data.length - 1)]);\r\n  const min = xAccessor(\r\n    data.length < 50 ? 0 : data[Math.min(50, Math.floor(data.length / 2))]\r\n  );\r\n  const xExtents = [min, max + 5];\r\n\r\n  const gridHeight = height - margin.top - margin.bottom;\r\n\r\n  const elderRayHeight = 100;\r\n  const elderRayOrigin = (_, h) => [0, h - elderRayHeight];\r\n  const barChartHeight = gridHeight / 4;\r\n  const barChartOrigin = (_, h) => [0, h - barChartHeight - elderRayHeight];\r\n  const chartHeight = gridHeight - elderRayHeight;\r\n\r\n  return (\r\n    <St.ChartContainer>\r\n      <St.HiddenH3>캔들 차트</St.HiddenH3>\r\n      {isCandleLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <ChartCanvas\r\n          height={height}\r\n          ratio={ratio}\r\n          width={width}\r\n          margin={margin}\r\n          data={data}\r\n          displayXAccessor={displayXAccessor}\r\n          seriesName=\"Data\"\r\n          xScale={xScale}\r\n          xAccessor={xAccessor}\r\n          xExtents={xExtents}\r\n          disableInteraction={false}\r\n          zoomAnchor={mouseBasedZoomAnchor}\r\n          onLoadBefore={() => {\r\n            dispatch(startAddMoreCandleData());\r\n          }}\r\n        >\r\n          <Chart\r\n            id={2}\r\n            height={barChartHeight}\r\n            origin={barChartOrigin}\r\n            yExtents={barChartExtents}\r\n          >\r\n            <BarSeries fillStyle={volumeColor} yAccessor={volumeSeries} />\r\n          </Chart>\r\n          <Chart id={3} height={chartHeight} yExtents={candleChartExtents}>\r\n            <XAxis showGridLines showTickLabel={false} />\r\n            <YAxis showGridLines tickFormat={pricesDisplayFormat} />\r\n            <CandlestickSeries\r\n              fill={openCloseColor}\r\n              wickStroke={openCloseColor}\r\n            />\r\n            <LineSeries\r\n              yAccessor={ema26.accessor()}\r\n              strokeStyle={ema26.stroke()}\r\n            />\r\n            <CurrentCoordinate\r\n              yAccessor={ema26.accessor()}\r\n              fillStyle={ema26.stroke()}\r\n            />\r\n            <LineSeries\r\n              yAccessor={ema12.accessor()}\r\n              strokeStyle={ema12.stroke()}\r\n            />\r\n            <CurrentCoordinate\r\n              yAccessor={ema12.accessor()}\r\n              fillStyle={ema12.stroke()}\r\n            />\r\n            <MouseCoordinateY\r\n              rectWidth={margin.right}\r\n              displayFormat={pricesDisplayFormat}\r\n            />\r\n            <EdgeIndicator\r\n              itemType=\"last\"\r\n              rectWidth={margin.right}\r\n              fill={openCloseColor}\r\n              lineStroke={openCloseColor}\r\n              displayFormat={pricesDisplayFormat}\r\n              yAccessor={yEdgeIndicator}\r\n            />\r\n            <MovingAverageTooltip\r\n              origin={[8, 24]}\r\n              options={[\r\n                {\r\n                  yAccessor: ema26.accessor(),\r\n                  type: \"EMA\",\r\n                  stroke: ema26.stroke(),\r\n                  windowSize: ema26.options().windowSize,\r\n                },\r\n                {\r\n                  yAccessor: ema12.accessor(),\r\n                  type: \"EMA\",\r\n                  stroke: ema12.stroke(),\r\n                  windowSize: ema12.options().windowSize,\r\n                },\r\n              ]}\r\n            />\r\n\r\n            <ZoomButtons />\r\n            <OHLCTooltip origin={[8, 16]} />\r\n          </Chart>\r\n          <Chart\r\n            id={4}\r\n            height={elderRayHeight}\r\n            yExtents={[0, elder.accessor()]}\r\n            origin={elderRayOrigin}\r\n            padding={{ top: 8, bottom: 8 }}\r\n          >\r\n            <XAxis showGridLines gridLinesStrokeStyle=\"#e0e3eb\" />\r\n            <YAxis ticks={4} tickFormat={pricesDisplayFormat} />\r\n\r\n            <MouseCoordinateX displayFormat={timeDisplayFormat} />\r\n            <MouseCoordinateY\r\n              rectWidth={margin.right}\r\n              displayFormat={pricesDisplayFormat}\r\n            />\r\n\r\n            <ElderRaySeries yAccessor={elder.accessor()} />\r\n\r\n            <SingleValueTooltip\r\n              yAccessor={elder.accessor()}\r\n              yLabel=\"Elder Ray\"\r\n              yDisplayFormat={(d) =>\r\n                `${pricesDisplayFormat(d.bullPower)}, ${pricesDisplayFormat(\r\n                  d.bearPower\r\n                )}`\r\n              }\r\n              origin={[8, 16]}\r\n            />\r\n          </Chart>\r\n          <CrossHairCursor snapX={false} />\r\n        </ChartCanvas>\r\n      )}\r\n    </St.ChartContainer>\r\n  );\r\n};\r\n\r\nexport default withOHLCData()(\r\n  withSize({\r\n    style: {\r\n      width: \"100%\",\r\n      height: \"500\",\r\n      minHeight,\r\n    },\r\n  })(\r\n    withDeviceRatio()(\r\n      withSelectedOption()(\r\n        withLoadingData()(withThemeData()(React.memo(MainChart, isEqual)))\r\n      )\r\n    )\r\n  )\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changePriceAndTotalPrice } from \"../../Reducer/coinReducer\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst St = {\r\n  OrderLi: styled.li`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 45px;\r\n    &:nth-last-child() {\r\n      border-bottom: none;\r\n    }\r\n    font-size: 0.8rem;\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 0.7rem;\r\n    }\r\n  `,\r\n\r\n  Btn: styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    cursor: pointer;\r\n  `,\r\n\r\n  OrderAmount: styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 45px;\r\n    border: 1px solid ${({ borderColor }) => borderColor};\r\n    padding-left: 5px;\r\n    padding-right: 10px;\r\n    margin-top: -1px;\r\n    margin-left: -1px;\r\n    text-align: right;\r\n  `,\r\n\r\n  OrderAmountSize: styled.div`\r\n    position: absolute;\r\n    width: ${({ witdhSize }) => witdhSize};\r\n    left: 0;\r\n    height: 70%;\r\n    background-color: ${({ bgColor }) => bgColor};\r\n  `,\r\n\r\n  OrderPriceContainer: styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 45px;\r\n    border: 1px solid ${({ borderColor }) => borderColor};\r\n    margin-top: -1px;\r\n    margin-left: -1px;\r\n    text-align: right;\r\n    color: ${({ fontColor }) => fontColor};\r\n    background-color: ${({ bgColor }) => bgColor};\r\n\r\n    ${({ outline }) =>\r\n      outline &&\r\n      css`\r\n        border: 2px solid black;\r\n        border-right: 3px solid black;\r\n        &::after {\r\n          content: \"\";\r\n          display: block;\r\n          position: absolute;\r\n          left: -5px;\r\n          width: 0px;\r\n          height: 0px;\r\n          border-right: 10px solid transparent;\r\n          border-bottom: 10px solid black;\r\n          transform: rotate(225deg);\r\n          -ms-transform: rotate(225deg);\r\n          -webkit-transform: rotate(225deg);\r\n          -moz-transform: rotate(225deg);\r\n          -o-transform: rotate(225deg);\r\n        }\r\n      `}\r\n\r\n    @media ${({ theme }) => theme.mobileM} {\r\n      flex-direction: column;\r\n    }\r\n  `,\r\n\r\n  OrderPrice: styled.strong`\r\n    font-weight: 800;\r\n  `,\r\n\r\n  OrderPrcieRatio: styled.span`\r\n    padding-left: 13px;\r\n  `,\r\n};\r\n\r\nconst OrderbookItem = ({\r\n  theme,\r\n  price,\r\n  size,\r\n  maxOrderSize,\r\n  type,\r\n  changeRate24Hour,\r\n  index,\r\n  outline,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (index === 7 && type === \"ask\") {\r\n      const parentNode = scrollRef.current.parentNode;\r\n      const parentAbsoluteTop = window.pageYOffset + parentNode.offsetTop;\r\n      const absoluteTop = window.pageYOffset + scrollRef.current.offsetTop;\r\n      const relativeTop = absoluteTop - parentAbsoluteTop;\r\n      scrollRef.current.parentNode.scrollTop = relativeTop;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <St.OrderLi ref={scrollRef} theme={theme}>\r\n      <St.Btn\r\n        onClick={(_) => {\r\n          document.activeElement.blur();\r\n          dispatch(changePriceAndTotalPrice(price));\r\n        }}\r\n      >\r\n        <St.OrderPriceContainer\r\n          theme={theme}\r\n          fontColor={\r\n            changeRate24Hour > 0\r\n              ? theme.priceUp\r\n              : +changeRate24Hour < 0\r\n              ? theme.priceDown\r\n              : \"black\"\r\n          }\r\n          borderColor={theme.lightGray}\r\n          bgColor={type === \"ask\" ? theme.skyBlue1 : theme.lightPink1}\r\n          // outline={lastTradePrice === price}\r\n          outline={outline}\r\n        >\r\n          <St.OrderPrice>{price.toLocaleString()}</St.OrderPrice>\r\n          <St.OrderPrcieRatio>{`${changeRate24Hour}%`}</St.OrderPrcieRatio>\r\n        </St.OrderPriceContainer>\r\n        <St.OrderAmount amountAlign={\"left\"} borderColor={theme.lightGray}>\r\n          {size}\r\n          <St.OrderAmountSize\r\n            witdhSize={`${Math.floor((size / maxOrderSize) * 100 - 10)}%`}\r\n            bgColor={type === \"ask\" ? theme.skyBlue2 : theme.lightPink2}\r\n          />\r\n        </St.OrderAmount>\r\n      </St.Btn>\r\n    </St.OrderLi>\r\n  );\r\n};\r\n\r\nexport default React.memo(OrderbookItem, isEqual);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst withOrderbookData = () => (OriginalComponent) => (props) => {\r\n  const selectedMarket = useSelector((state) => state.Coin.selectedMarket);\r\n  const orderbook = useSelector(\r\n    (state) => state.Coin.orderbook.data[selectedMarket]\r\n  );\r\n\r\n  let totalData;\r\n  let bidOrderbookData;\r\n  let askOrderbookData;\r\n  let orderbookData;\r\n  let maxOrderSize = 0;\r\n\r\n  if (orderbook) {\r\n    totalData = {\r\n      totalBidSize: orderbook.total_bid_size,\r\n      totalAskSize: orderbook.total_ask_size,\r\n    };\r\n\r\n    bidOrderbookData = [];\r\n    askOrderbookData = [];\r\n\r\n    // let maxOrderSize = 0;\r\n    // 호가 데이터 분리 정렬\r\n    orderbook.orderbook_units.forEach((orderbook, i) => {\r\n      const bidSize = orderbook.bid_size.toFixed(3);\r\n      const askSize = orderbook.ask_size.toFixed(3);\r\n\r\n      bidOrderbookData.push({\r\n        bidPrice: orderbook.bid_price,\r\n        bidSize: orderbook.bid_size.toFixed(3),\r\n      });\r\n      askOrderbookData.push({\r\n        askPrice: orderbook.ask_price,\r\n        askSize: orderbook.ask_size.toFixed(3),\r\n      });\r\n      maxOrderSize = Math.max(maxOrderSize, bidSize, askSize);\r\n    });\r\n\r\n    orderbookData = [...askOrderbookData, ...bidOrderbookData];\r\n    // 매도 호가창은 가격 내림차순으로 정렬해줌 (매수는 원래 가격 내림차순임)\r\n    askOrderbookData.sort((book1, book2) => +book2.askPrice - +book1.askPrice);\r\n  }\r\n\r\n  return (\r\n    <OriginalComponent\r\n      {...props}\r\n      totalData={totalData || []}\r\n      orderbookData={orderbookData || []}\r\n      bidOrderbookData={bidOrderbookData || []}\r\n      askOrderbookData={askOrderbookData || []}\r\n      maxOrderSize={maxOrderSize || 0}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withOrderbookData;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport OrderbookItem from \"./OrderbookItem\";\r\nimport Loading from \"../Global/Loading\";\r\n\r\nimport withThemeData from \"../../Container/withThemeData\";\r\nimport withSelectedCoinPrice from \"../../Container/withSelectedCoinPrice\";\r\nimport withOrderbookData from \"../../Container/withOrderbookData\";\r\nimport withSelectedOption from \"../../Container/withSelectedOption\";\r\nimport withLoadingData from \"../../Container/withLoadingData\";\r\n\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst St = {\r\n  Container: styled.section`\r\n    width: 46%;\r\n    max-height: 722px;\r\n    height: 100%;\r\n    background-color: white;\r\n  `,\r\n  HiddenH3: styled.h3`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    clip: rect(0, 0);\r\n    clip-path: polygon(0, 0);\r\n    overflow: hidden;\r\n    text-indent: -9999px;\r\n  `,\r\n  OrderUl: styled.ul`\r\n    width: 100%;\r\n    height: 722px;\r\n    overflow-y: scroll;\r\n    scrollbar-color: ${({ theme }) => theme.middleGray};\r\n    scrollbar-width: thin;\r\n    scrollbar-base-color: transparent;\r\n    &::-webkit-scrollbar {\r\n      width: 5px;\r\n      background-color: transparent;\r\n      border-radius: 5rem;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: ${({ theme }) => theme.middleGray};\r\n      border-radius: 5rem;\r\n    }\r\n  `,\r\n};\r\n\r\nconst Orderbook = ({\r\n  theme,\r\n  // totalData,\r\n  askOrderbookData,\r\n  bidOrderbookData,\r\n  maxOrderSize,\r\n  beforeDayPrice,\r\n  selectedMarket,\r\n  isOrderbookLoading,\r\n}) => {\r\n  const lastTradePrice = useSelector(\r\n    (state) =>\r\n      state.Coin.tradeList.data[selectedMarket] &&\r\n      state.Coin.tradeList.data[selectedMarket][0].trade_price\r\n  );\r\n  return (\r\n    <St.Container>\r\n      <St.HiddenH3>호가창</St.HiddenH3>\r\n      <St.OrderUl>\r\n        {isOrderbookLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          askOrderbookData.map((orderbook, i) => {\r\n            return (\r\n              <OrderbookItem\r\n                theme={theme}\r\n                price={orderbook.askPrice}\r\n                size={orderbook.askSize}\r\n                maxOrderSize={maxOrderSize}\r\n                // key={`askOrder-${orderbook.askPrice}`}\r\n                key={`askOrder-${i}`}\r\n                type={\"ask\"}\r\n                changeRate24Hour={(\r\n                  ((orderbook.askPrice - beforeDayPrice) / beforeDayPrice) *\r\n                  100\r\n                ).toFixed(2)}\r\n                index={i}\r\n                outline={lastTradePrice === orderbook.askPrice}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n        {isOrderbookLoading ||\r\n          bidOrderbookData.map((orderbook, i) => {\r\n            return (\r\n              <OrderbookItem\r\n                theme={theme}\r\n                price={orderbook.bidPrice}\r\n                size={orderbook.bidSize}\r\n                maxOrderSize={maxOrderSize}\r\n                // key={`bidOrder-${orderbook.bidPrice}`}\r\n                key={`bidOrder-${i}`}\r\n                type={\"bid\"}\r\n                changeRate24Hour={(\r\n                  ((orderbook.bidPrice - beforeDayPrice) / beforeDayPrice) *\r\n                  100\r\n                ).toFixed(2)}\r\n                index={i}\r\n                outline={lastTradePrice === orderbook.bidPrice}\r\n              />\r\n            );\r\n          })}\r\n      </St.OrderUl>\r\n    </St.Container>\r\n  );\r\n};\r\n\r\nexport default withOrderbookData()(\r\n  withSelectedCoinPrice()(\r\n    withSelectedOption()(\r\n      withLoadingData()(withThemeData()(React.memo(Orderbook, isEqual)))\r\n    )\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst St = {\r\n  Container: styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 212px;\r\n    background-color: white;\r\n    font-size: 0.8rem;\r\n    color: #666;\r\n  `,\r\n};\r\n\r\nconst OrderInfoTradeList = ({ theme }) => {\r\n  return <St.Container>로그인 후 사용 가능합니다.</St.Container>;\r\n};\r\n\r\nexport default React.memo(OrderInfoTradeList);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  changeAmountAndTotalPrice,\r\n  changePriceAndTotalPrice,\r\n  changeTotalPriceAndAmount,\r\n} from \"../../Reducer/coinReducer\";\r\nimport OrderInfoTradeList from \"./OrderInfoTradeList\";\r\n\r\nconst St = {\r\n  Container: styled.section`\r\n    width: 100%;\r\n    height: 50%;\r\n    background-color: white;\r\n  `,\r\n  OrderTypeContainer: styled.div`\r\n    display: flex;\r\n    height: 40px;\r\n    align-items: center;\r\n    border-bottom: 1px solid ${({ theme }) => theme.lightGray2};\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 0.8rem;\r\n    }\r\n  `,\r\n  OrderType: styled.button`\r\n    width: 33.33%;\r\n    height: 100%;\r\n    background-color: white;\r\n    border: none;\r\n    border-bottom: 3px solid\r\n      ${({ borderBottom }) => borderBottom || \"tranceparent\"};\r\n    outline: 0;\r\n    font-weight: 900;\r\n    color: ${({ fontColor }) => fontColor || \"black\"};\r\n  `,\r\n  OrderInfoContainer: styled.div`\r\n    width: 100%;\r\n    padding: 15px;\r\n    padding-top: 0;\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      padding: 5px;\r\n    }\r\n  `,\r\n  OrderInfoDetailContainer: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 38px;\r\n    margin-top: 15px;\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 0.6rem;\r\n      margint-right: 10px;\r\n    }\r\n  `,\r\n  OrderInfoDetailTitle: styled.span`\r\n    display: block;\r\n    width: 20%;\r\n    min-width: 52px;\r\n    max-width: 100px;\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: #666;\r\n    margin-left: 5px;\r\n    margin-right: 5px;\r\n  `,\r\n  OrderInfoInputContainer: styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n  `,\r\n  OrderInfoInput: styled.input`\r\n    width: ${({ width }) => width || \"100%\"};\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 5px;\r\n    padding-right: 15px;\r\n    border: 1px solid ${({ theme }) => theme.lightGray2};\r\n    text-align: right;\r\n    font-size: 0.95rem;\r\n    font-weight: ${({ fontWeight }) => fontWeight};\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 0.6rem;\r\n    }\r\n  `,\r\n  Button: styled.button`\r\n    width: ${({ width }) => width || \"50px\"};\r\n    min-width: ${({ minWidth }) => minWidth};\r\n    height: ${({ height }) => height || \"38px\"};\r\n    margin-right: ${({ marginRight }) => marginRight};\r\n    background-color: ${({ bgColor }) => bgColor || \"tranceparent\"};\r\n    border: none;\r\n    border-top: 1px solid ${({ borderColor }) => borderColor || \"tranceparent\"};\r\n    border-right: 1px solid\r\n      ${({ borderColor }) => borderColor || \"tranceparent\"};\r\n    border-bottom: 1px solid\r\n      ${({ borderColor }) => borderColor || \"tranceparent\"};\r\n    outline: none;\r\n    color: ${({ fontColor }) => fontColor || \"black\"};\r\n    font-size: ${({ fontSize }) => fontSize};\r\n    font-weight: 900;\r\n  `,\r\n  PossibleAmount: styled.span`\r\n    display: block;\r\n    width: 100%;\r\n    text-align: right;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 1rem;\r\n    }\r\n  `,\r\n  Unit: styled.span`\r\n    margin-left: 5px;\r\n    font-size: 0.8rem;\r\n    font-weight: 500;\r\n  `,\r\n  OrderBtnContainer: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    margin-top: 50px;\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 0.8rem;\r\n    }\r\n  `,\r\n};\r\n\r\nconst OrderInfoAskBid = ({\r\n  theme,\r\n  selectedAskBidOrder,\r\n  coinSymbol,\r\n  orderPrice,\r\n  orderAmount,\r\n  orderTotalPrice,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const changePrice = useCallback(\r\n    (e) =>\r\n      dispatch(\r\n        changePriceAndTotalPrice(\r\n          parseInt(e.target.value.replace(/[^0-9-.]/g, \"\"))\r\n        )\r\n      ),\r\n    [dispatch]\r\n  );\r\n  const changeAmount = useCallback(\r\n    (e) => {\r\n      dispatch(\r\n        changeAmountAndTotalPrice(e.target.value.replace(/[^0-9-.]/g, \"\"))\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const changeTotalPrice = useCallback(\r\n    (e) =>\r\n      dispatch(\r\n        changeTotalPriceAndAmount(\r\n          parseInt(e.target.value.replace(/[^0-9-.]/g, \"\"))\r\n        )\r\n      ),\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <St.OrderInfoContainer theme={theme}>\r\n      {selectedAskBidOrder !== \"tradeList\" ? (\r\n        <>\r\n          <St.OrderInfoDetailContainer>\r\n            <St.OrderInfoDetailTitle>주문가능</St.OrderInfoDetailTitle>\r\n            <St.PossibleAmount>\r\n              0\r\n              <St.Unit>\r\n                {selectedAskBidOrder === \"bid\" ? \"KRW\" : coinSymbol}\r\n              </St.Unit>\r\n            </St.PossibleAmount>\r\n          </St.OrderInfoDetailContainer>\r\n          <St.OrderInfoDetailContainer>\r\n            <St.OrderInfoDetailTitle>\r\n              {selectedAskBidOrder === \"bid\" ? \"매수가격\" : \"매도가격\"}\r\n            </St.OrderInfoDetailTitle>\r\n            <St.OrderInfoInputContainer>\r\n              <St.OrderInfoInput\r\n                onChange={changePrice}\r\n                value={orderPrice ? orderPrice.toLocaleString() : \"\"}\r\n                fontWeight={800}\r\n                placeholder={0}\r\n              />\r\n              <St.Button\r\n                bgColor={theme.lightGray}\r\n                borderColor={theme.lightGray2}\r\n                fontColor={\"#666\"}\r\n                fontSize={\"1.1rem\"}\r\n              >\r\n                +\r\n              </St.Button>\r\n              <St.Button\r\n                bgColor={theme.lightGray}\r\n                borderColor={theme.lightGray2}\r\n                fontColor={\"#666\"}\r\n                fontSize={\"1.1rem\"}\r\n              >\r\n                -\r\n              </St.Button>\r\n            </St.OrderInfoInputContainer>\r\n          </St.OrderInfoDetailContainer>\r\n          <St.OrderInfoDetailContainer>\r\n            <St.OrderInfoDetailTitle>주문수량</St.OrderInfoDetailTitle>\r\n            <St.OrderInfoInput\r\n              onChange={changeAmount}\r\n              value={orderAmount ? orderAmount.toLocaleString() : \"\"}\r\n              placeholder={0}\r\n            />\r\n          </St.OrderInfoDetailContainer>\r\n          <St.OrderInfoDetailContainer>\r\n            <St.OrderInfoDetailTitle>주문총액</St.OrderInfoDetailTitle>\r\n            <St.OrderInfoInput\r\n              onChange={changeTotalPrice}\r\n              value={orderTotalPrice ? orderTotalPrice.toLocaleString() : \"\"}\r\n              placeholder={0}\r\n            />\r\n          </St.OrderInfoDetailContainer>\r\n        </>\r\n      ) : (\r\n        <OrderInfoTradeList theme={theme} />\r\n      )}\r\n      <St.OrderBtnContainer>\r\n        <St.Button\r\n          width={\"30%\"}\r\n          minWidth={\"70px\"}\r\n          marginRight={\"5px\"}\r\n          bgColor={theme.test}\r\n          fontSize={\"0.9rem\"}\r\n          fontColor={\"white\"}\r\n        >\r\n          회원가입\r\n        </St.Button>\r\n        <St.Button\r\n          width={\"65%\"}\r\n          bgColor={theme.test}\r\n          fontSize={\"0.9rem\"}\r\n          fontColor={\"white\"}\r\n        >\r\n          로그인\r\n        </St.Button>\r\n      </St.OrderBtnContainer>\r\n    </St.OrderInfoContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(OrderInfoAskBid);\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport OrderInfoAskBid from \"./OrderInfoAskBid\";\r\n\r\nimport withSelectedOption from \"../../Container/withSelectedOption\";\r\nimport withThemeData from \"../../Container/withThemeData\";\r\nimport withSelectedCoinName from \"../../Container/withSelectedCoinName\";\r\n\r\nimport { changeAskBidOrder } from \"../../Reducer/coinReducer\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst St = {\r\n  Container: styled.section`\r\n    width: 100%;\r\n    height: 50%;\r\n    background-color: white;\r\n  `,\r\n  HiddenH3: styled.h3`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    clip: rect(0, 0);\r\n    clip-path: polygon(0, 0);\r\n    overflow: hidden;\r\n    text-indent: -9999px;\r\n  `,\r\n  OrderTypeContainer: styled.ul`\r\n    display: flex;\r\n    height: 40px;\r\n    align-items: center;\r\n    border-bottom: 1px solid ${({ theme }) => theme.lightGray2};\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 0.8rem;\r\n    }\r\n  `,\r\n  OrderTypeLi: styled.li`\r\n    width: 33.3333%;\r\n    height: 100%;\r\n  `,\r\n  OrderTypeBtn: styled.button`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n    border: none;\r\n    border-bottom: 3px solid ${({ borderBottom }) => borderBottom || \"white\"};\r\n    outline: 0;\r\n    font-weight: 900;\r\n    color: ${({ fontColor }) => fontColor || \"black\"};\r\n    cursor: pointer;\r\n  `,\r\n};\r\n\r\nconst OrderInfo = ({\r\n  theme,\r\n  selectedAskBidOrder,\r\n  coinSymbol,\r\n  orderPrice,\r\n  orderAmount,\r\n  orderTotalPrice,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <St.Container>\r\n      <St.HiddenH3>주문 정보</St.HiddenH3>\r\n      <St.OrderTypeContainer>\r\n        <St.OrderTypeLi>\r\n          <St.OrderTypeBtn\r\n            borderBottom={selectedAskBidOrder === \"bid\" && theme.strongRed}\r\n            fontColor={selectedAskBidOrder === \"bid\" && theme.strongRed}\r\n            onClick={() => dispatch(changeAskBidOrder(\"bid\"))}\r\n          >\r\n            매수\r\n          </St.OrderTypeBtn>\r\n        </St.OrderTypeLi>\r\n        <St.OrderTypeLi>\r\n          <St.OrderTypeBtn\r\n            borderBottom={selectedAskBidOrder === \"ask\" && theme.strongBlue}\r\n            fontColor={selectedAskBidOrder === \"ask\" && theme.strongBlue}\r\n            onClick={() => dispatch(changeAskBidOrder(\"ask\"))}\r\n          >\r\n            매도\r\n          </St.OrderTypeBtn>\r\n        </St.OrderTypeLi>\r\n        <St.OrderTypeLi>\r\n          <St.OrderTypeBtn\r\n            borderBottom={selectedAskBidOrder === \"tradeList\" && \"black\"}\r\n            fontColor={selectedAskBidOrder === \"tradeList\" && \"black\"}\r\n            onClick={() => dispatch(changeAskBidOrder(\"tradeList\"))}\r\n          >\r\n            거래내역\r\n          </St.OrderTypeBtn>\r\n        </St.OrderTypeLi>\r\n      </St.OrderTypeContainer>\r\n      <OrderInfoAskBid\r\n        theme={theme}\r\n        selectedAskBidOrder={selectedAskBidOrder}\r\n        coinSymbol={coinSymbol}\r\n        orderPrice={orderPrice}\r\n        orderAmount={orderAmount}\r\n        orderTotalPrice={orderTotalPrice}\r\n      />\r\n    </St.Container>\r\n  );\r\n};\r\n\r\nexport default withSelectedCoinName()(\r\n  withSelectedOption()(withThemeData()(React.memo(OrderInfo, isEqual)))\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst St = {\r\n  TradeListLi: styled.li`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 25px;\r\n    font-size: 0.9em;\r\n    background-color: ${({ bgColor }) => bgColor || \"white\"};\r\n  `,\r\n\r\n  Datetime: styled.div`\r\n    width: 20%;\r\n    text-align: center;\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      display: none;\r\n    }\r\n  `,\r\n  Date: styled.span`\r\n    text-align: center;\r\n  `,\r\n\r\n  Time: styled.span`\r\n    text-align: center;\r\n    font-size: 0.8rem;\r\n    margin-left: 5px;\r\n  `,\r\n\r\n  TradePrice: styled.span`\r\n    display: block;\r\n    width: 20%;\r\n    text-align: center;\r\n    color: ${({ fontColor }) => fontColor};\r\n    font-weight: 600;\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      width: 50%;\r\n      font-size: 0.7rem;\r\n    }\r\n    @media ${({ theme }) => theme.mobileM} {\r\n      /* width: 50%; */\r\n      font-size: 0.8rem;\r\n    }\r\n  `,\r\n\r\n  TradeAmount: styled.span`\r\n    display: block;\r\n    width: 20%;\r\n    text-align: center;\r\n    color: ${({ fontColor }) => fontColor};\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      width: 50%;\r\n      font-size: 0.7rem;\r\n    }\r\n\r\n    @media ${({ theme }) => theme.mobileM} {\r\n      /* width: 50%; */\r\n      font-size: 0.8rem;\r\n    }\r\n  `,\r\n\r\n  TradeKRW: styled.span`\r\n    display: block;\r\n    width: 20%;\r\n    text-align: right;\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      display: none;\r\n    }\r\n\r\n    @media ${({ theme }) => theme.mobileM} {\r\n      display: none;\r\n    }\r\n  `,\r\n};\r\n\r\nconst TradeListItem = ({\r\n  theme,\r\n  index,\r\n  date,\r\n  time,\r\n  tradePrice,\r\n  changePrice,\r\n  tradeAmount,\r\n  askBid,\r\n}) => {\r\n  return (\r\n    <St.TradeListLi\r\n      bgColor={index % 2 ? theme.lightGray1 : \"white\"}\r\n      index={index}\r\n    >\r\n      <St.Datetime>\r\n        <St.Date>{date}</St.Date>\r\n        <St.Time>{time}</St.Time>\r\n      </St.Datetime>\r\n      <St.TradePrice\r\n        fontColor={changePrice > 0 ? theme.priceUp : theme.priceDown}\r\n      >\r\n        {tradePrice.toLocaleString()}\r\n      </St.TradePrice>\r\n      <St.TradeAmount\r\n        theme={theme}\r\n        fontColor={askBid === \"BID\" ? theme.priceUp : theme.priceDown}\r\n      >\r\n        {tradeAmount.toFixed(5)}\r\n      </St.TradeAmount>\r\n      <St.TradeKRW theme={theme}>\r\n        {Math.floor(tradePrice * tradeAmount).toLocaleString()}\r\n      </St.TradeKRW>\r\n    </St.TradeListLi>\r\n  );\r\n};\r\n\r\nexport default React.memo(TradeListItem, isEqual);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst withTradeListData = () => (OriginalComponent) => (props) => {\r\n  const selectedMarket = useSelector((state) => state.Coin.selectedMarket);\r\n  const selectedTradeListData = useSelector(\r\n    (state) => state.Coin.tradeList.data[selectedMarket]\r\n  );\r\n\r\n  return (\r\n    <OriginalComponent\r\n      {...props}\r\n      selectedTradeListData={selectedTradeListData}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withTradeListData;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Decimal from \"decimal.js\";\r\nimport moment from \"moment-timezone\";\r\n\r\nimport TradeListItem from \"./TradeListItem\";\r\nimport Loading from \"../Global/Loading\";\r\n\r\nimport withTradeListData from \"../../Container/withTradeListData\";\r\nimport withThemeData from \"../../Container/withThemeData\";\r\nimport withLoadingData from \"../../Container/withLoadingData\";\r\n\r\nconst St = {\r\n  Container: styled.article`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n    margin-top: 10px;\r\n    @media ${({ theme }) => theme.mobileM} {\r\n      margin-top: 0;\r\n    }\r\n  `,\r\n  HiddenH3: styled.h3`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    clip: rect(0, 0);\r\n    clip-path: polygon(0, 0);\r\n    overflow: hidden;\r\n    text-indent: -9999px;\r\n  `,\r\n  TradeListUL: styled.ul`\r\n    overflow-y: scroll;\r\n    scrollbar-color: ${(props) => props.scrollColor};\r\n    scrollbar-width: thin;\r\n    scrollbar-base-color: ${(props) => props.scrollColor};\r\n    &::-webkit-scrollbar {\r\n      width: 5px;\r\n      background-color: white;\r\n      border-radius: 5rem;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: ${(props) => props.scrollColor};\r\n      border-radius: 5rem;\r\n    }\r\n    height: 320px;\r\n  `,\r\n  TradeListTitle: styled.ul`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    height: 25px;\r\n    background-color: ${({ theme }) => theme.lightGray1};\r\n    font-size: 0.9rem;\r\n\r\n    @media ${({ theme }) => theme.mobileS} {\r\n      font-size: 0.6rem;\r\n    }\r\n  `,\r\n  TitleListItem: styled.li`\r\n    width: 20%;\r\n\r\n    min-width: 58px;\r\n    text-align: ${({ textAlign }) => textAlign || \"center\"};\r\n    @media ${({ theme, mobileSNone }) => (mobileSNone ? theme.mobileS : true)} {\r\n      display: none;\r\n    }\r\n\r\n    @media ${({ theme, mobileMNone }) => (mobileMNone ? theme.mobileM : true)} {\r\n      display: none;\r\n    }\r\n\r\n    @media ${({ theme, mobileSNone }) => mobileSNone || theme.mobileS} {\r\n      width: 50%;\r\n    }\r\n  `,\r\n};\r\n\r\nconst TradeList = ({ theme, selectedTradeListData, isTradeListLoading }) => {\r\n  return (\r\n    <St.Container>\r\n      <St.HiddenH3>실시간 체결내역</St.HiddenH3>\r\n      <St.TradeListTitle bgColor={theme.lightGray1}>\r\n        <St.TitleListItem mobileSNone={true} textAlign={\"center\"}>\r\n          체결시간\r\n        </St.TitleListItem>\r\n        <St.TitleListItem>체결가격</St.TitleListItem>\r\n        <St.TitleListItem>체결량</St.TitleListItem>\r\n        <St.TitleListItem mobileMNone={true} textAlign={\"right\"}>\r\n          체결금액\r\n        </St.TitleListItem>\r\n      </St.TradeListTitle>\r\n      <St.TradeListUL scrollColor={theme.middleGray}>\r\n        {isTradeListLoading || !selectedTradeListData ? (\r\n          <Loading />\r\n        ) : (\r\n          selectedTradeListData.map((tradeList, i) => {\r\n            const tradeAmount = new Decimal(tradeList.trade_volume) + \"\";\r\n            return (\r\n              <TradeListItem\r\n                theme={theme}\r\n                index={i}\r\n                // key={`tradeList-${tradeList.sequential_id}`}\r\n                key={`tradeList-${i}`}\r\n                date={moment(tradeList.timestamp).format(\"MM.DD\")}\r\n                time={moment(tradeList.timestamp).format(\"HH:mm\")}\r\n                tradePrice={tradeList.trade_price}\r\n                changePrice={tradeList.change_price}\r\n                tradeAmount={+tradeAmount}\r\n                askBid={tradeList.ask_bid}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </St.TradeListUL>\r\n    </St.Container>\r\n  );\r\n};\r\n\r\nexport default withTradeListData()(\r\n  withLoadingData()(withThemeData()(React.memo(TradeList)))\r\n);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { startChangeMarketAndData } from \"../../Reducer/coinReducer\";\r\n\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst St = {\r\n  CoinLi: styled.li`\r\n    width: 100%;\r\n    height: 45px;\r\n\r\n    border-bottom: 1px solid ${({ borderBottomColor }) => borderBottomColor};\r\n    &:last-child {\r\n      border-bottom: none;\r\n    }\r\n    background-color: ${({ bgColor }) => bgColor};\r\n  `,\r\n  CoinBtn: styled.button`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    text-align: left;\r\n  `,\r\n  CoinLogo: styled.i`\r\n    display: inline-block;\r\n    width: 20px;\r\n    height: 20px;\r\n    background-image: ${({ coinNameEn }) =>\r\n      coinNameEn !== \"ADX\"\r\n        ? `url(https://static.upbit.com/logos/${coinNameEn}.png)`\r\n        : \"../styles/img/ADX.png\"};\r\n    background-size: cover;\r\n    margin-left: 5px;\r\n    margin-right: 15px;\r\n  `,\r\n  CoinNameContainer: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    width: 20%;\r\n    min-width: 55px;\r\n    height: 45px;\r\n  `,\r\n  CoinName: styled.strong`\r\n    display: block;\r\n    font-size: 12px;\r\n    font-weight: 800;\r\n    @media ${({ theme }) => theme.tablet} {\r\n      font-weight: 500;\r\n    }\r\n  `,\r\n  CoinNameEn: styled.span`\r\n    display: block;\r\n    font-size: 12px;\r\n  `,\r\n  Price: styled.strong`\r\n    display: block;\r\n    width: 20%;\r\n    min-width: 55px;\r\n    height: 100%;\r\n    text-align: right;\r\n    line-height: 2.5rem;\r\n    font-size: 12px;\r\n    font-weight: 800;\r\n    color: ${({ fontColor }) => fontColor};\r\n\r\n    border: 1px solid transparent;\r\n    ${({ isTraded }) =>\r\n      isTraded &&\r\n      (isTraded === \"ASK\"\r\n        ? css`\r\n            animation: disappearBlue 0.6s;\r\n          `\r\n        : css`\r\n            animation: disappearRed 0.6s;\r\n          `)};\r\n    @keyframes disappearBlue {\r\n      0% {\r\n        border-color: ${({ theme }) => theme.strongBlue};\r\n      }\r\n      100% {\r\n        border-color: ${({ theme }) => theme.strongBlue};\r\n      }\r\n    }\r\n    @keyframes disappearRed {\r\n      0% {\r\n        border-color: ${({ theme }) => theme.strongRed};\r\n      }\r\n      100% {\r\n        border-color: ${({ theme }) => theme.strongRed};\r\n      }\r\n    }\r\n\r\n    @media ${({ theme }) => theme.tablet} {\r\n      font-weight: 500;\r\n    }\r\n  `,\r\n  ChangRateContainer: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    width: 20%;\r\n    min-width: 55px;\r\n    height: 100%;\r\n    text-align: right;\r\n  `,\r\n  ChangeRate: styled.span`\r\n    display: block;\r\n    font-size: 12px;\r\n    color: ${({ fontColor }) => fontColor};\r\n    /* font-weight: 800; */\r\n  `,\r\n  ChangePrice: styled.span`\r\n    display: block;\r\n    font-size: 12px;\r\n    color: ${({ fontColor }) => fontColor};\r\n    /* font-weight: 800; */\r\n  `,\r\n  TradePrice: styled.span`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    font-size: 12px;\r\n    width: 25%;\r\n    height: 100%;\r\n    text-align: right;\r\n    /* font-weight: 800; */\r\n  `,\r\n};\r\n\r\nconst CoinListItem = ({\r\n  theme,\r\n  selectedMarket,\r\n  marketName,\r\n  coinName,\r\n  enCoinName,\r\n  fontColor,\r\n  price,\r\n  changeRate24Hour,\r\n  changePrice24Hour,\r\n  tradePrice24Hour,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const tradeListData = useSelector(\r\n    (state) => state.Coin.tradeList.data[marketName]\r\n  );\r\n\r\n  const nowTimestamp = +new Date();\r\n\r\n  const isTraded =\r\n    tradeListData &&\r\n    tradeListData.length > 2 &&\r\n    nowTimestamp - tradeListData[0].timestamp < 500 &&\r\n    tradeListData[0].trade_price !== tradeListData[1].trade_price\r\n      ? tradeListData[0].ask_bid\r\n      : false;\r\n\r\n  const changeMarket = useCallback(() => {\r\n    dispatch(startChangeMarketAndData(marketName));\r\n    history.push(\"/trade\");\r\n  }, [dispatch, marketName, history]);\r\n\r\n  return (\r\n    <St.CoinLi\r\n      borderBottomColor={theme.lightGray}\r\n      bgColor={selectedMarket === marketName ? theme.lightGray : \"white\"}\r\n    >\r\n      <St.CoinBtn onClick={changeMarket}>\r\n        <St.CoinLogo\r\n          coinNameEn={enCoinName.split(\"/\")[0]}\r\n          title={`${coinName} 로고`}\r\n        />\r\n        <St.CoinNameContainer>\r\n          <St.CoinName theme={theme}>{coinName}</St.CoinName>\r\n          <St.CoinNameEn>{enCoinName}</St.CoinNameEn>\r\n        </St.CoinNameContainer>\r\n        <St.Price theme={theme} fontColor={fontColor} isTraded={isTraded}>\r\n          {price.toLocaleString()}\r\n        </St.Price>\r\n        <St.ChangRateContainer>\r\n          <St.ChangeRate fontColor={fontColor}>\r\n            {changeRate24Hour}\r\n          </St.ChangeRate>\r\n          <St.ChangePrice fontColor={fontColor}>\r\n            {changePrice24Hour.toLocaleString()}\r\n          </St.ChangePrice>\r\n        </St.ChangRateContainer>\r\n        <St.TradePrice>\r\n          {tradePrice24Hour.toLocaleString() + \" 백만\"}\r\n        </St.TradePrice>\r\n      </St.CoinBtn>\r\n    </St.CoinLi>\r\n  );\r\n};\r\n\r\nexport default React.memo(CoinListItem, isEqual);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport * as Hangul from \"hangul-js\";\r\nimport { choHangul } from \"../Lib/utils\";\r\n\r\nconst withMarketNames = () => (OriginalComponent) => (props) => {\r\n  const marketNames = useSelector((state) => state.Coin.marketNames.data); // 코인 마켓 이름들(객체)\r\n  let marketNamesArr = Object.keys(marketNames); // 코인 마켓 이름 배열화\r\n\r\n  const coinListDatas = useSelector((state) => state.Coin.candle.data); // 코인들 데이터\r\n  const coinSearchInputData = useSelector((state) => state.Coin.searchCoin); // 검색한 코인 이름\r\n\r\n  // 데이터 받는 데 성공하면 필터링 및 정렬한다\r\n  if (Object.keys(coinListDatas).length > 1) {\r\n    // 검색 기준 필터링\r\n    marketNamesArr = marketNamesArr.filter(\r\n      (coin) =>\r\n        // 영어 검색\r\n        marketNames[coin].english\r\n          .toLowerCase()\r\n          .includes(coinSearchInputData.toLowerCase()) ||\r\n        // 코인 심볼 검색\r\n        coin\r\n          .split(\"-\")[1]\r\n          .toLowerCase()\r\n          .includes(coinSearchInputData.toLowerCase()) ||\r\n        // 한글 검색\r\n        Hangul.disassembleToString(marketNames[coin].korean).includes(\r\n          Hangul.disassembleToString(coinSearchInputData)\r\n        ) ||\r\n        // 초성 검색\r\n        choHangul(marketNames[coin].korean).includes(coinSearchInputData)\r\n    );\r\n\r\n    // 정렬\r\n    marketNamesArr = marketNamesArr.sort((coin1, coin2) => {\r\n      return (\r\n        +coinListDatas[coin2].tradePrice24Hour -\r\n        +coinListDatas[coin1].tradePrice24Hour\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <OriginalComponent\r\n      {...props}\r\n      marketNames={marketNames}\r\n      sortedMarketNames={marketNamesArr}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withMarketNames;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst withLatestCoinData = () => (OriginalComponent) => (props) => {\r\n  const coinListDatas = useSelector((state) => state.Coin.candle.data); // 코인들 데이터\r\n\r\n  const latestCoinData = {};\r\n\r\n  if (Object.keys(coinListDatas).length > 2) {\r\n    Object.keys(coinListDatas).forEach((marketName) => {\r\n      latestCoinData[marketName] = {};\r\n      latestCoinData[marketName].price =\r\n        coinListDatas[marketName].candles[\r\n          coinListDatas[marketName].candles.length - 1\r\n        ].close;\r\n\r\n      latestCoinData[marketName].changeRate24Hour = (\r\n        Math.round(coinListDatas[marketName].changeRate24Hour * 10000) / 100\r\n      ).toFixed(2);\r\n\r\n      latestCoinData[marketName].changePrice24Hour =\r\n        coinListDatas[marketName].changePrice24Hour;\r\n\r\n      latestCoinData[marketName].tradePrice24Hour = Math.floor(\r\n        coinListDatas[marketName].tradePrice24Hour / 1000000\r\n      );\r\n    });\r\n  }\r\n\r\n  return <OriginalComponent {...props} latestCoinData={latestCoinData} />;\r\n};\r\n\r\nexport default withLatestCoinData;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { searchCoin } from \"../../Reducer/coinReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport CoinListItem from \"./CoinListItem\";\r\nimport Loading from \"../Global/Loading\";\r\n\r\nimport withThemeData from \"../../Container/withThemeData\";\r\nimport withSelectedOption from \"../../Container/withSelectedOption\";\r\nimport withMarketNames from \"../../Container/withMarketNames\";\r\nimport withLatestCoinData from \"../../Container/withLatestCoinData\";\r\nimport withLoadingData from \"../../Container/withLoadingData\";\r\n\r\nconst St = {\r\n  CoinListContainer: styled.article`\r\n    display: none;\r\n    position: -webkit-sticky; /* 사파리  */\r\n    position: sticky;\r\n    top: 70px;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: white;\r\n    overflow: hidden;\r\n\r\n    @media ${({ theme }) => theme.desktop} {\r\n      display: block;\r\n      max-width: 400px;\r\n      height: ${({ heightSize }) => `${heightSize}px`};\r\n      margin-left: 10px;\r\n    }\r\n\r\n    @media ${({ theme, isRootURL }) => (!isRootURL ? theme.mobileM : true)} {\r\n      display: none;\r\n    }\r\n\r\n    @media ${({ theme, isRootURL }) => (isRootURL ? theme.tablet : true)} {\r\n      display: block;\r\n      margin-top: 0;\r\n      margin-bottom: 0;\r\n      height: ${({ heightSize }) =>\r\n        `${heightSize + 80}px`}; // 모바일 풀 화면을 위해 다시 80px 더해줌\r\n    }\r\n  `,\r\n  HiddenH3: styled.h3`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    clip: rect(0, 0);\r\n    clip-path: polygon(0, 0);\r\n    overflow: hidden;\r\n    text-indent: -9999px;\r\n  `,\r\n  CoinSearchContainer: styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    border-bottom: 1px solid ${({ theme }) => theme.lightGray2};\r\n  `,\r\n  CoinSearchInput: styled.input`\r\n    width: 100%;\r\n    border: none;\r\n    padding: 5px;\r\n    padding-left: 12px;\r\n    &::placeholder {\r\n      font-size: 0.7rem;\r\n      color: gray;\r\n      font-weight: 700;\r\n    }\r\n  `,\r\n  CoinSearchBtn: styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    background: url(\"https://cdn.upbit.com/images/bg.e801517.png\") -83px 2px no-repeat;\r\n    background-color: white;\r\n    padding: 10px;\r\n    padding-right: 20px;\r\n    padding-left: 20px;\r\n    border: none;\r\n  `,\r\n  CoinSortContainer: styled.ul`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: white;\r\n    width: 100%;\r\n    height: 30px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.lightGray2};\r\n    font-size: 0.9rem;\r\n    font-weight: 800;\r\n    color: #666666;\r\n  `,\r\n  CoinSortList: styled.li`\r\n    width: ${({ width }) => width || \"20%\"};\r\n    text-align: ${({ textAlign }) => textAlign || \"right\"};\r\n    margin-right: ${({ marginRight }) => marginRight || 0};\r\n    font-size: 0.78rem;\r\n  `,\r\n  CoinUl: styled.ul`\r\n    height: ${({ heightSize }) => `${heightSize + 70}px`};\r\n    min-height: 800px;\r\n    background-color: white;\r\n    overflow-y: scroll;\r\n    scrollbar-color: ${({ theme }) => theme.middleGray};\r\n    scrollbar-width: thin;\r\n    scrollbar-base-color: ${({ theme }) => theme.middleGray};\r\n    &::-webkit-scrollbar {\r\n      width: 5px;\r\n      background-color: white;\r\n      border-radius: 5rem;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: ${({ theme }) => theme.middleGray};\r\n      border-radius: 5rem;\r\n    }\r\n\r\n    @media ${({ theme }) => theme.desktop} {\r\n      display: block;\r\n      max-width: 400px;\r\n      height: ${({ heightSize }) => `${heightSize}px`};\r\n    }\r\n  `,\r\n};\r\n\r\nconst CoinList = ({\r\n  theme,\r\n  marketNames,\r\n  sortedMarketNames,\r\n  latestCoinData,\r\n  selectedMarket,\r\n  searchCoinInput,\r\n  isMarketNamesLoading,\r\n  isInitCandleLoading,\r\n  heightSize,\r\n  isRootURL,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <St.CoinListContainer isRootURL={isRootURL} heightSize={heightSize - 80}>\r\n      <St.HiddenH3>코인 리스트</St.HiddenH3>\r\n      <St.CoinSearchContainer>\r\n        <St.CoinSearchInput\r\n          type=\"search\"\r\n          onChange={(e) => dispatch(searchCoin(e.target.value))}\r\n          value={searchCoinInput}\r\n          placeholder={\"코인명/심볼검색\"}\r\n        />\r\n        <St.CoinSearchBtn />\r\n      </St.CoinSearchContainer>\r\n      <St.CoinSortContainer>\r\n        <St.CoinSortList width={\"50px\"} />\r\n        <St.CoinSortList textAlign={\"left\"}>한글명</St.CoinSortList>\r\n        <St.CoinSortList>현재가</St.CoinSortList>\r\n        <St.CoinSortList>상승률</St.CoinSortList>\r\n        <St.CoinSortList width={\"25%\"} marginRight={\"10px\"}>\r\n          거래대금\r\n        </St.CoinSortList>\r\n      </St.CoinSortContainer>\r\n      <St.CoinUl heightSize={heightSize - 140}>\r\n        {isMarketNamesLoading || isInitCandleLoading ? (\r\n          <Loading center={false} />\r\n        ) : (\r\n          sortedMarketNames.map((marketName) => {\r\n            const splitedName = marketName.split(\"-\");\r\n            const enCoinName = splitedName[1] + \"/\" + splitedName[0];\r\n            const changePrice24Hour =\r\n              latestCoinData[marketName].changePrice24Hour;\r\n            const changeRate24Hour =\r\n              latestCoinData[marketName].changeRate24Hour;\r\n            const tradePrice24Hour =\r\n              latestCoinData[marketName].tradePrice24Hour;\r\n            const price = latestCoinData[marketName].price;\r\n            // const isTraded = latestCoinData[marketName].isTraded;\r\n\r\n            const fontColor =\r\n              +changePrice24Hour > 0\r\n                ? theme.strongRed\r\n                : +changePrice24Hour < 0\r\n                ? theme.strongBlue\r\n                : \"black\";\r\n            return (\r\n              <CoinListItem\r\n                theme={theme}\r\n                marketName={marketName}\r\n                selectedMarket={selectedMarket}\r\n                coinName={marketNames[marketName].korean}\r\n                enCoinName={enCoinName}\r\n                fontColor={fontColor}\r\n                price={price}\r\n                changeRate24Hour={changeRate24Hour + \"%\"}\r\n                changePrice24Hour={changePrice24Hour}\r\n                tradePrice24Hour={tradePrice24Hour}\r\n                // isTraded={isTraded}\r\n                key={`coinList-${marketName}`}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </St.CoinUl>\r\n    </St.CoinListContainer>\r\n  );\r\n};\r\n\r\nexport default withLatestCoinData()(\r\n  withMarketNames()(\r\n    withSelectedOption()(\r\n      withLoadingData()(withThemeData()(React.memo(CoinList)))\r\n    )\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst St = {\r\n  Footer: styled.footer`\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color:rgb(255, 215, 0);\r\n    padding: 20px 0;\r\n    @media ${({ theme }) => theme.tablet} {\r\n      display: none;\r\n    }\r\n  `,\r\n  Container: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 1360px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n\r\n    @media ${({ theme }) => theme.tablet} {\r\n      display: block;\r\n      max-width: 950px;\r\n    }\r\n  `,\r\n  MainLink: styled.a`\r\n    display: block;\r\n    background-image: ${({ logo }) => `url(${logo})`};\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: contain;\r\n    color: transparent;\r\n    width: 130px;\r\n    height: 60px;\r\n  `,\r\n  Description: styled.p`\r\n    font-weight: 600;\r\n    font-size: 0.9rem;\r\n    color: white;\r\n    height: 85px;\r\n    margin-top: 10px;\r\n  `,\r\n  DescSpan: styled.span`\r\n    display: block;\r\n    height: 30px;\r\n  `,\r\n  ContactContainer: styled.address`\r\n    display: flex;\r\n    flex-direction: column;\r\n  `,\r\n  LinkTitle: styled.span`\r\n    height: 25px;\r\n    font-size: 0.9rem;\r\n    font-weight: 600;\r\n    color: white;\r\n  `,\r\n  LinkTag: styled.a`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 30px;\r\n    color: white;\r\n    text-decoration: none;\r\n  `,\r\n  LinkSpan: styled.span`\r\n    display: block;\r\n    margin-left: ${({ marginLeft }) => marginLeft || \"8px\"};\r\n    font-weight: 600;\r\n    font-size: 0.9rem;\r\n    height: 20px;\r\n    color: white;\r\n  `,\r\n};\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <St.Footer>\r\n      <St.Container>\r\n        <St.MainLink\r\n          href=\"/\"\r\n          title={\"메인으로 이동\"}\r\n          logo={process.env.PUBLIC_URL + \"/blueLogo.png\"}\r\n        />\r\n        <St.Description>\r\n          <St.DescSpan>Team Name : Kuos</St.DescSpan>\r\n          <St.DescSpan>Member : 서기영 김민욱 이혜진 박태현 이시은</St.DescSpan>\r\n          <St.DescSpan>\r\n            2022/02/24 START ~ 2022/03/31 END\r\n          </St.DescSpan>\r\n        </St.Description>\r\n        <St.ContactContainer>\r\n          <St.LinkTitle>Contact Me</St.LinkTitle>\r\n          <ul>\r\n            <li>\r\n              <St.LinkTag href=\"https://github.com/Seongkyun-Yu/upbit-clone\">\r\n                <FontAwesomeIcon\r\n                  icon={faGithub}\r\n                  size=\"lg\"\r\n                  title={\"Github 아이콘\"}\r\n                />\r\n                <St.LinkSpan>github.com/kuocoin</St.LinkSpan>\r\n              </St.LinkTag>\r\n            </li>\r\n            <li>\r\n              <St.LinkTag href=\"mailto:ysungkyun@gmail.com\">\r\n                <FontAwesomeIcon\r\n                  icon={faEnvelope}\r\n                  size=\"lg\"\r\n                  title={\"이메일 아이콘\"}\r\n                />\r\n                <St.LinkSpan>leesieun@gmail.com</St.LinkSpan>\r\n              </St.LinkTag>\r\n            </li>\r\n          </ul>\r\n        </St.ContactContainer>\r\n      </St.Container>\r\n    </St.Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport withSize from \"../Container/withSize\";\r\nimport { viewSize } from \"../styles/theme\";\r\n\r\nimport Header from \"../Components/Global/Header\";\r\nimport CoinInfoHeader from \"../Components/Main/CoinInfoHeader\";\r\nimport ChartDataConsole from \"../Components/Main/ChartDataConsole\";\r\nimport MainChart from \"../Components/Main/MainChart\";\r\nimport Orderbook from \"../Components/Main/Orderbook\";\r\nimport OrderInfo from \"../Components/Main/OrderInfo\";\r\nimport TradeList from \"../Components/Main/TradeList\";\r\nimport CoinList from \"../Components/Main/CoinList\";\r\nimport Footer from \"../Components/Global/Footer\";\r\n\r\nconst St = {\r\n  MainContentContainer: styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    max-width: 1500px;\r\n    margin: 0 auto;\r\n    margin-top: 10px;\r\n    margin-bottom: 50px;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    @media ${({ theme }) => theme.tablet} {\r\n      margin-top: 0;\r\n      margin-bottom: 0;\r\n    }\r\n  `,\r\n  ChartAndTradeContainer: styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 95%;\r\n    max-width: 950px;\r\n\r\n    @media ${(props) => (props.isRootURL ? props.theme.tablet : true)} {\r\n      display: none;\r\n    }\r\n  `,\r\n  HiddenH2: styled.h2`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    clip: rect(0, 0);\r\n    clip-path: polygon(0, 0);\r\n    overflow: hidden;\r\n    text-indent: -9999px;\r\n  `,\r\n  MainChartContainer: styled.div`\r\n    width: 100%;\r\n    height: 500;\r\n  `,\r\n  TradeInfoContainer: styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    @media ${({ theme }) => theme.mobileM} {\r\n      margin-top: 0;\r\n    }\r\n  `,\r\n  TradeOrderContainer: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 55%;\r\n    min-width: 180px;\r\n    margin-left: 10px;\r\n    @media ${({ theme }) => theme.mobileM} {\r\n      margin-left: 0;\r\n      border: 2px solid ${({ theme }) => theme.lightGray1};\r\n      /* border-top: 1px solid ${({ theme }) => theme.lightGray1};\r\n      border-bottom: 1px solid ${({ theme }) => theme.lightGray1};\r\n      border-left: 1px solid ${({ theme }) => theme.lightGray1}; */\r\n    }\r\n  `,\r\n};\r\n\r\nconst Main = ({ match, widthSize, heightSize }) => {\r\n  const isRootURL = match.path === \"/\";\r\n\r\n  return (\r\n    <>\r\n      <Header isRootURL={isRootURL} />\r\n      <St.MainContentContainer>\r\n        {\r\n          // 차트 및 주문 관련 뷰는 메인 페이지이면서 tablet 사이즈보다 크거나, 메인 페이지가 아닌 경우에만 그린다\r\n          ((isRootURL && widthSize > viewSize.tablet) || !isRootURL) && (\r\n            <St.ChartAndTradeContainer isRootURL={isRootURL}>\r\n              <St.HiddenH2>차트 및 주문 정보 창</St.HiddenH2>\r\n              <CoinInfoHeader />\r\n              <ChartDataConsole />\r\n              <MainChart />\r\n              <St.TradeInfoContainer>\r\n                <Orderbook />\r\n                <St.TradeOrderContainer>\r\n                  <OrderInfo />\r\n                  <TradeList />\r\n                </St.TradeOrderContainer>\r\n              </St.TradeInfoContainer>\r\n            </St.ChartAndTradeContainer>\r\n          )\r\n        }\r\n        {\r\n          // 코인 리스트 뷰는 메인 페이지이거나, 메인 페이지가 아니면서  tablet 사이즈보다 큰  경우에만 그린다\r\n          (isRootURL || (!isRootURL && widthSize > viewSize.tablet)) && (\r\n            <CoinList\r\n              widthSize={widthSize}\r\n              heightSize={heightSize}\r\n              isRootURL={isRootURL}\r\n            />\r\n          )\r\n        }\r\n      </St.MainContentContainer>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withSize()(React.memo(Main));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport './HomeCss.css'\r\n\r\n// const BackimgStyle = styled.image`\r\n//     height: 1000px;\r\n//     width: 1000px;\r\n    \r\n    \r\n// `;\r\n\r\n\r\n\r\n\r\nconst HomeBackimg = () => {\r\n    return(\r\n        <>\r\n        <img className='Backimg' src='./3.jpeg'></img>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeBackimg;\r\n","import React from \"react\";\r\nimport withSize from \"../Container/withSize\";\r\nimport Header from \"../Components/Global/Header\";\r\nimport Footer from \"../Components/Global/Footer\";\r\nimport HomeBackimg from \"../Components/Home/HomeBackimg\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst Home = ({ match, widthSize, heightSize }) => {\r\n  const isHomeURL = match.path === \"/home\";\r\n\r\n  return (\r\n    <>\r\n    <Header/>\r\n    <HomeBackimg/>\r\n    <Footer/>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withSize()(React.memo(Home));\r\n","import { useEffect, useState, useLayoutEffect } from \"react\";\r\nimport React from \"react\";\r\nimport \"./Mypage.css\";\r\n\r\n\r\nexport default function Profile() {\r\nconst [state, setState] = useState({\r\n    id: 1,\r\n    name: \"\",\r\n    psw: \"\",\r\n    adr: \"\",\r\n})\r\n\r\nconst [check, setCheck] = useState(true);\r\n\r\nconst [inputs, setInputs] = useState({\r\n    id: 1,\r\n    name: \"\",\r\n    psw: \"\",\r\n    adr:\"\",\r\n})\r\n\r\nconst {name, id, psw, adr} = inputs\r\n\r\nconst handler = e => {\r\n    const {value, name} = e.target\r\n    setInputs ({\r\n        ...inputs,\r\n        [name]: value,\r\n    })\r\n}\r\n\r\nuseLayoutEffect(\r\n    () => {\r\n        fetch(\"http://localhost:3001/mypage\", \r\n        {\r\n        method: \"get\",\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n        },  \r\n    })\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n        console.log(json)\r\n        for (let val of json) {\r\n            if (val.id==inputs.id) {\r\n                setState({\r\n                    name: val.kuoname,\r\n                    id: val.id,\r\n                    psw: val.kuopwd,\r\n                    adr: val.kuoadr,\r\n                })\r\n            }\r\n        }\r\n    })\r\n\r\n    }, []\r\n) \r\n\r\nconst onClick = () => {\r\n    setCheck(false)\r\n}\r\n\r\nconst btnClick = () => {\r\n\r\n    if (name===\"\") inputs.name=state.name;\r\n    if (id===\"\") inputs.id=state.id;\r\n    if (psw===\"\") inputs.psw=state.psw;\r\n    if (adr===\"\") inputs.adr=state.adr;\r\n    console.log(inputs);\r\n\r\n    fetch(\"http://localhost:3001/mypage\", \r\n        {\r\n        method: \"put\",\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(inputs)\r\n    })\r\n\r\n    .then(()=> {\r\n        console.log('1')\r\n        setState(inputs);\r\n    }).then(()=> {\r\n        console.log('2')\r\n        setInputs({\r\n            name: \"\",\r\n            id: \"\",\r\n            psw: \"\",\r\n            adr:\"\",\r\n        })\r\n        setCheck(true)\r\n    })\r\n}\r\nif(check) {\r\nreturn (\r\n    <div className=\"mydiv\">\r\n        <h2 className=\"mytitle\">PROFILE</h2><br/>\r\n        <p className=\"mytext\">NAME : {state.name}</p>\r\n        <p className=\"mytext\">ID : {state.id}</p>\r\n        <p className=\"mytext\">PASSWORD : {state.psw}</p>\r\n        <p className=\"mytext\">ADDRESS : {state.adr}</p>\r\n        <button className=\"mybtn\" type = \"button\" onClick = {onClick} >수정하기</button>\r\n    </div>\r\n    );\r\n}\r\nelse{\r\n    return (\r\n<>\r\n    <div className=\"mydiv\">\r\n        <h2 className=\"mytitle\">PROFILE</h2><br/>\r\n        <p className=\"mytext\">NAME \r\n            <input className=\"myinput\" name = \"name\" value = {name} type = \"text\" placeholder = {state.name} onChange = {handler}/>\r\n        </p>\r\n        <p className=\"mytext\">ID \r\n            <input className=\"myinput\" name = \"id\" value = {id} type = \"text\" placeholder = {state.id} onChange = {handler}/>\r\n        </p>\r\n        <p className=\"mytext\">PASSWORD \r\n            <input className=\"myinput\" name = \"psw\" value = {psw} type = \"text\" placeholder = {state.psw} onChange = {handler}/>\r\n        </p>\r\n        <p className=\"mytext\">ADDRESS \r\n            <input className=\"myinput\" name = \"adr\" value = {adr} type = \"text\" placeholder = {state.adr} onChange = {handler}/>\r\n        </p>\r\n        <button className=\"mybtn\" type = \"button\" onClick = {btnClick}>저장하기</button>\r\n    </div>\r\n</>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport withSize from \"../Container/withSize\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Mypage from \"../Components/Mypage/Mypage\"\r\n\r\nconst Profile = ({ match, widthSize, heightSize }) => {\r\n    const isHomeURL = match.path === \"/mypage\";\r\n  \r\n    return (\r\n      <>\r\n      <Mypage/>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default withSize()(React.memo(Profile));","import React from \"react\";\r\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Main from \"../Pages/Main\";\r\nimport Home from \"../Pages/Home\";\r\nimport Mypage from \"../Pages/Mypage\";\r\n\r\nconst MainRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Main} />\r\n      <Route exact path=\"/trade\" component={Main} />\r\n      <Route exact path=\"/home\" component={Home} />\r\n      <Route exact path=\"/mypage\" component={Mypage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default MainRouter;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startInit } from \"./Reducer/coinReducer\";\r\nimport MainRouter from \"./Router/MainRouter\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(startInit());\r\n  }, [dispatch]);\r\n\r\n  return <MainRouter />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { coinReducer, coinSaga } from \"./coinReducer\";\r\nimport { loadingReducer } from \"./loadingReducer\";\r\nimport { all } from \"redux-saga/effects\";\r\n\r\nconst rootReducer = combineReducers({\r\n  Coin: coinReducer,\r\n  Loading: loadingReducer,\r\n});\r\n\r\nfunction* rootSaga() {\r\n  yield all([coinSaga()]);\r\n}\r\n\r\nexport { rootReducer, rootSaga };\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport normalize from \"styled-normalize\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n  ${reset}\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  body {\r\n    background-color: rgb(231, 234, 239);\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import \"core-js/stable\";\r\nimport \"core-js/es/set\";\r\nimport \"core-js/es/map\";\r\nimport \"regenerator-runtime/runtime\";\r\nimport \"raf/polyfill\";\r\nimport \"react-app-polyfill/ie9\";\r\nimport \"react-app-polyfill/stable\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer, rootSaga } from \"./Reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"./styles/theme\";\r\nimport GlobalStyle from \"./styles/GlobalStyle\";\r\n\r\n// import \"./index.css\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(ReduxThunk, sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <GlobalStyle />\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}